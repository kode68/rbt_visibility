{"ast":null,"code":"// src/components/RBTDataGrid.jsx\nimport React,{useEffect,useState}from\"react\";import{DataGrid,GridToolbar}from\"@mui/x-data-grid\";import{collection,getDocs,doc,updateDoc,deleteDoc,getDoc}from\"firebase/firestore\";import{db,auth}from\"../firebase\";import{logAndUpdateField}from\"../utils/db\";import{Chip,Box,LinearProgress,Dialog,DialogTitle,DialogContent,DialogActions,Button,TextField,Typography,FormControl,Select,MenuItem,Checkbox,FormControlLabel,Stack,Divider,Tooltip}from\"@mui/material\";import DeleteOutlineIcon from\"@mui/icons-material/DeleteOutline\";import EventIcon from\"@mui/icons-material/Event\";import ScheduleIcon from\"@mui/icons-material/Schedule\";import WarningAmberRoundedIcon from\"@mui/icons-material/WarningAmberRounded\";import{differenceInDays,format}from\"date-fns\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ALL_PARTS=[\"ANTENA CABLE\",\"ANTENA PORT\",\"BATTERY\",\"BATTERY BOX\",\"BRUSH MOTOR\",\"CHARGE CONTROLLER\",\"GUIDE WHEEL 1\",\"GUIDE WHEEL 2\",\"GUIDE WHEEL 3\",\"GUIDE WHEEL 4\",\"HOME SENSOR\",\"LIMIT SWITCH 1\",\"LIMIT SWITCH 2\",\"LOAD WHEEL 1\",\"LOAD WHEEL 2\",\"LOAD WHEEL 3\",\"LOAD WHEEL 4\",\"LT 1\",\"LT 2\",\"PCB BOX\",\"PULSE COUNT\",\"PV MODULE\",\"REPEATER PCB\",\"RTC\",\"SS PIPE\",\"SSC\",\"STEPPER DRIVE\",\"STEPPER MOTOR\",\"TC BELT\",\"TC LOAD WHEEL\",\"XBEE\"].sort();const generateDefaultPartIssues=()=>{const defaults={};ALL_PARTS.forEach(part=>{defaults[part]={selected:false,dispatch_date:\"\",delivery_date:\"\"};});return defaults;};// ------- helpers -------\nconst asDate=maybeTs=>{if(!maybeTs)return null;if(typeof maybeTs.toDate===\"function\")return maybeTs.toDate();const d=new Date(maybeTs);return isNaN(d)?null:d;};const computeAgeing=row=>{if(!row||row.running_status===\"Auto\")return 0;const manualAt=asDate(row.running_manual_at);const notRunAt=asDate(row.running_not_running_at);const candidates=[];if(manualAt)candidates.push(manualAt);if(notRunAt)candidates.push(notRunAt);if(!candidates.length)return Number(row.running_status_ageing||0);const older=candidates.sort((a,b)=>a-b)[0];return Math.max(differenceInDays(new Date(),older),0);};// nicer chip render\nconst StatusChip=_ref=>{let{label,color}=_ref;return/*#__PURE__*/_jsx(Chip,{label:label,color:color,size:\"small\",sx:{fontWeight:600,borderRadius:2,px:1,minWidth:96,justifyContent:\"center\"}});};const RBTDataGrid=_ref2=>{var _auth$currentUser,_ref4,_pendingUpdates$runni,_ref5,_pendingUpdates$runni2,_ref6,_pendingUpdates$break,_ref7,_pendingUpdates$break2;let{client,sites}=_ref2;const[rows,setRows]=useState([]);const[loading,setLoading]=useState(true);const[selectedRBT,setSelectedRBT]=useState(null);const[partIssues,setPartIssues]=useState({});const[targetDate,setTargetDate]=useState(\"\");// YYYY-MM-DD\nconst[pendingUpdates,setPendingUpdates]=useState(null);// { running_status?, breakdown_status? }\nconst[userRole,setUserRole]=useState(\"user\");const userEmail=((_auth$currentUser=auth.currentUser)===null||_auth$currentUser===void 0?void 0:_auth$currentUser.email)||\"\";// ✅ Fetch user role\nuseEffect(()=>{const fetchRole=async()=>{if(userEmail){const userRef=doc(db,\"users\",auth.currentUser.uid);const userSnap=await getDoc(userRef);if(userSnap.exists())setUserRole(userSnap.data().role||\"user\");}};fetchRole();},[userEmail]);// ✅ Fetch RBTs (multi-site)\nuseEffect(()=>{const fetchRBTs=async()=>{if(!client||!sites||sites.length===0){setRows([]);return;}setLoading(true);try{const allRBTs=await Promise.all(sites.map(async site=>{const snapshot=await getDocs(collection(db,\"clients\",client,\"sites\",site,\"rbts\"));return snapshot.docs.map(docSnap=>{var _rbtData$running_stat;const rbtData=docSnap.data();return{id:docSnap.id,site,running_status:rbtData.running_status||\"Auto\",breakdown_status:rbtData.breakdown_status||\"N/A\",work:rbtData.work||\"\",target_date:rbtData.target_date||\"\",// YYYY-MM-DD\nrunning_status_ageing:(_rbtData$running_stat=rbtData.running_status_ageing)!==null&&_rbtData$running_stat!==void 0?_rbtData$running_stat:0,running_manual_at:rbtData.running_manual_at||null,running_not_running_at:rbtData.running_not_running_at||null,part_issues:{...generateDefaultPartIssues(),...(rbtData.part_issues||{})},...rbtData};});}));const mergedRBTs=allRBTs.flat();// ✅ Sort by site then RBT number\nmergedRBTs.sort((a,b)=>{if(a.site!==b.site)return a.site.localeCompare(b.site);const numA=parseInt(String(a.id).replace(/\\D/g,\"\"),10)||0;const numB=parseInt(String(b.id).replace(/\\D/g,\"\"),10)||0;return numA-numB;});setRows(mergedRBTs);}catch(error){console.error(\"Error fetching RBTs:\",error);}setLoading(false);};fetchRBTs();},[client,JSON.stringify(sites)]);// ========== LOG HELPERS ==========\nconst updateFieldWithLog=async(row,field,newValue)=>{var _row$field;const oldValue=(_row$field=row[field])!==null&&_row$field!==void 0?_row$field:\"\";if(oldValue===newValue)return;const rbtRef=doc(db,\"clients\",client,\"sites\",row.site,\"rbts\",row.id);await updateDoc(rbtRef,{[field]:newValue});await logAndUpdateField(client,row.site,row.id,field,oldValue,newValue);setRows(prev=>prev.map(r=>r.id===row.id&&r.site===row.site?{...r,[field]:newValue}:r));};const updateManyWithLog=async(row,updates)=>{// single Firestore update, then log each field change\nconst rbtRef=doc(db,\"clients\",client,\"sites\",row.site,\"rbts\",row.id);await updateDoc(rbtRef,updates);for(const[field,newValue]of Object.entries(updates)){var _row$field2;const oldValue=(_row$field2=row[field])!==null&&_row$field2!==void 0?_row$field2:\"\";if(oldValue!==newValue){await logAndUpdateField(client,row.site,row.id,field,oldValue,newValue);}}setRows(prev=>prev.map(r=>r.id===row.id&&r.site===row.site?{...r,...updates}:r));};const updatePartIssueFieldWithLog=async(row,part,subField,newValue)=>{var _row$part_issues;const prev=((_row$part_issues=row.part_issues)===null||_row$part_issues===void 0?void 0:_row$part_issues[part])||{selected:false,dispatch_date:\"\",delivery_date:\"\"};const oldValue=(prev===null||prev===void 0?void 0:prev[subField])||\"\";if(oldValue===newValue)return;const rbtRef=doc(db,\"clients\",client,\"sites\",row.site,\"rbts\",row.id);const path=`part_issues.${part}.${subField}`;await updateDoc(rbtRef,{[path]:newValue});await logAndUpdateField(client,row.site,row.id,path,oldValue,newValue);setPartIssues(prevIssues=>({...prevIssues,[part]:{...(prevIssues[part]||{}),[subField]:newValue}}));setRows(prevRows=>prevRows.map(r=>{var _r$part_issues;return r.id===row.id&&r.site===row.site?{...r,part_issues:{...r.part_issues,[part]:{...(((_r$part_issues=r.part_issues)===null||_r$part_issues===void 0?void 0:_r$part_issues[part])||{}),[subField]:newValue}}}:r;}));};const togglePartSelectionWithLog=async(row,part)=>{var _row$part_issues2;const prev=((_row$part_issues2=row.part_issues)===null||_row$part_issues2===void 0?void 0:_row$part_issues2[part])||{selected:false,dispatch_date:\"\",delivery_date:\"\"};const nextSelected=!prev.selected;const nextObj={selected:nextSelected,dispatch_date:nextSelected?prev.dispatch_date||\"\":\"\",delivery_date:nextSelected?prev.delivery_date||\"\":\"\"};const rbtRef=doc(db,\"clients\",client,\"sites\",row.site,\"rbts\",row.id);const path=`part_issues.${part}`;await updateDoc(rbtRef,{[path]:nextObj});await logAndUpdateField(client,row.site,row.id,path,JSON.stringify(prev),JSON.stringify(nextObj));setPartIssues(p=>({...p,[part]:nextObj}));setRows(prevRows=>prevRows.map(r=>r.id===row.id&&r.site===row.site?{...r,part_issues:{...r.part_issues,[part]:nextObj}}:r));};// ========= UI HELPERS (COLORS) =========\nconst getStatusColor=(field,value)=>{if(field===\"running_status\"){if(value===\"Auto\")return\"success\";if(value===\"Manual\")return\"warning\";return\"error\";}if(field===\"breakdown_status\"){if(value===\"Running With Issue\")return\"warning\";if(value===\"Breakdown\")return\"error\";return\"default\";}if(field===\"work\"){if(value===\"Part Installation\")return\"info\";if(value===\"Part Testing\")return\"secondary\";if(value===\"Trial\")return\"warning\";if(value===\"Auto Scheduling\")return\"success\";return\"default\";}return\"default\";};// ========= STATUS CHANGE ORCHESTRATION =========\nconst openIssueDialogFor=(row,pending)=>{setSelectedRBT(row);setPartIssues(row.part_issues||generateDefaultPartIssues());setTargetDate(row.target_date||\"\");setPendingUpdates(pending);// { running_status?, breakdown_status? }\n};const beginStatusChange=async(row,field,newValue)=>{const currentRun=row.running_status||\"Auto\";const currentBrk=row.breakdown_status||\"N/A\";if(field===\"running_status\"){if(newValue===\"Auto\"){// Back to nominal: apply immediately\nawait updateManyWithLog(row,{running_status:\"Auto\",breakdown_status:\"N/A\"});return;}// Require part issues dialog + target date\nconst nextBrk=currentBrk===\"N/A\"?\"Running With Issue\":currentBrk;const pending={running_status:newValue};if(nextBrk!==currentBrk)pending.breakdown_status=nextBrk;openIssueDialogFor(row,pending);return;}if(field===\"breakdown_status\"){if(newValue===\"N/A\"){// Nominal => Auto\nawait updateManyWithLog(row,{breakdown_status:\"N/A\",running_status:\"Auto\"});return;}// Non-N/A requires target date and possibly set run from Auto -> Manual\nconst nextRun=currentRun===\"Auto\"?\"Manual\":currentRun;const pending={breakdown_status:newValue};if(nextRun!==currentRun)pending.running_status=nextRun;openIssueDialogFor(row,pending);return;}// other fields (work etc.) normal update\nawait updateFieldWithLog(row,field,newValue);};// ✅ DROPDOWN: render in a portal so it never gets clipped; comfy size\nconst renderDropdown=(params,field,options)=>/*#__PURE__*/_jsx(FormControl,{size:\"small\",sx:{minWidth:140,width:\"100%\"},children:/*#__PURE__*/_jsx(Select,{value:params.value||\"\",onChange:async e=>{const newValue=e.target.value;await beginStatusChange(params.row,field,newValue);if(field===\"running_status\"&&(newValue===\"Manual\"||newValue===\"Not Running\")||field===\"breakdown_status\"&&(newValue===\"Breakdown\"||newValue===\"Running With Issue\")){// opening dialog already handled in beginStatusChange\n}},displayEmpty:true,fullWidth:true,MenuProps:{disablePortal:false,container:()=>document.body,PaperProps:{sx:{zIndex:2000,minWidth:220,maxHeight:360,borderRadius:2}},MenuListProps:{dense:true}},sx:{width:\"100%\",\"& .MuiSelect-select\":{display:\"flex\",alignItems:\"center\",py:0.5}},children:options.map(opt=>/*#__PURE__*/_jsx(MenuItem,{value:opt,children:/*#__PURE__*/_jsx(StatusChip,{label:opt,color:getStatusColor(field,opt)})},opt))})});const openPartIssues=row=>{// Manual open (no status pending). Let them edit parts/target_date optionally.\nsetSelectedRBT(row);setPartIssues(row.part_issues||generateDefaultPartIssues());setTargetDate(row.target_date||\"\");setPendingUpdates(null);// no pending status change\n};const getSelectedPartCount=row=>Object.values(row.part_issues||{}).filter(p=>p===null||p===void 0?void 0:p.selected).length;// ====== Columns ======\nconst baseEditable=userRole===\"super_admin\";const columns=[{field:\"site\",headerName:\"Site\",flex:0.7,minWidth:110,headerAlign:\"center\",align:\"center\"},{field:\"id\",headerName:\"RBT ID\",flex:0.6,minWidth:90,headerAlign:\"center\",align:\"center\"},{field:\"cleaner_did\",headerName:\"Cleaner DID\",flex:1.2,minWidth:160,editable:baseEditable},{field:\"tc_did\",headerName:\"TC DID\",flex:1.2,minWidth:160,editable:baseEditable},{field:\"cl_pcb_model\",headerName:\"CL PCB Model\",flex:0.8,minWidth:110,headerAlign:\"center\",align:\"center\",editable:baseEditable},{field:\"tc_pcb_model\",headerName:\"TC PCB Model\",flex:0.8,minWidth:110,headerAlign:\"center\",align:\"center\",editable:baseEditable},{field:\"running_status\",headerName:\"Running Status\",flex:0.9,minWidth:170,headerAlign:\"center\",align:\"center\",renderCell:params=>renderDropdown(params,\"running_status\",[\"Auto\",\"Manual\",\"Not Running\"])},{field:\"breakdown_status\",headerName:\"Breakdown Status\",flex:1.0,minWidth:170,headerAlign:\"center\",align:\"center\",renderCell:params=>renderDropdown(params,\"breakdown_status\",[\"Running With Issue\",\"Breakdown\",\"N/A\"])},{field:\"work\",headerName:\"Work Status\",flex:1.0,minWidth:170,headerAlign:\"center\",align:\"center\",renderCell:params=>{const run=params.row.running_status||\"\";const brk=params.row.breakdown_status||\"\";const showWork=run!==\"Auto\"||brk!==\"N/A\";if(!showWork)return/*#__PURE__*/_jsx(\"span\",{style:{opacity:0.45},children:\"\\u2014\"});return renderDropdown(params,\"work\",[\"Part Procurement\",\"Part In-Transit\",\"Part Installation\",\"Part Testing\",\"Trial\",\"Auto Scheduling\"]);}},// Target Date (read-only in grid for cleanliness)\n{field:\"target_date\",headerName:\"Target Date\",flex:0.85,minWidth:150,headerAlign:\"center\",align:\"center\",sortable:false,renderCell:params=>{const value=params.row.target_date||\"\";if(!value)return/*#__PURE__*/_jsx(\"span\",{style:{opacity:0.45},children:\"\\u2014\"});// show as dd-MMM-yyyy\nlet label=value;try{label=format(new Date(value),\"dd-MMM-yyyy\");}catch{}return/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(EventIcon,{sx:{fontSize:16}}),label:label,size:\"small\",variant:\"outlined\",sx:{borderRadius:2,fontWeight:600}});}},// Ageing (computed) — handle both v5/v6 signatures\n{field:\"ageing\",headerName:\"Ageing\",flex:0.55,minWidth:90,headerAlign:\"center\",align:\"center\",valueGetter:(value,row,params)=>{var _ref3;const r=(_ref3=row!==null&&row!==void 0?row:params===null||params===void 0?void 0:params.row)!==null&&_ref3!==void 0?_ref3:null;return computeAgeing(r);},renderCell:params=>{const v=Number(params.value||0);const color=v>14?\"error\":v>7?\"warning\":\"default\";return/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(ScheduleIcon,{sx:{fontSize:16}}),color:color,variant:color===\"default\"?\"outlined\":\"filled\",size:\"small\",label:`${v}d`,sx:{borderRadius:2,fontWeight:700,minWidth:64,justifyContent:\"center\"}});}},{field:\"part_issues_btn\",headerName:\"Part Issues\",flex:0.9,minWidth:130,sortable:false,headerAlign:\"center\",align:\"center\",renderCell:params=>{const count=getSelectedPartCount(params.row);return/*#__PURE__*/_jsx(Tooltip,{title:\"Open part issues & target date\",children:/*#__PURE__*/_jsx(Button,{variant:\"outlined\",size:\"small\",onClick:()=>openPartIssues(params.row),children:count>0?`Part Issues (${count})`:\"Part Issues\"})});}},...(userRole===\"super_admin\"?[{field:\"actions\",headerName:\"Actions\",flex:0.6,minWidth:108,headerAlign:\"center\",align:\"center\",sortable:false,renderCell:params=>/*#__PURE__*/_jsx(Button,{variant:\"outlined\",size:\"small\",color:\"error\",startIcon:/*#__PURE__*/_jsx(DeleteOutlineIcon,{}),onClick:()=>handleDeleteRBT(params.row),children:\"Delete\"})}]:[])];// ✅ Delete RBT (Super Admin only)\nconst handleDeleteRBT=async rbt=>{if(userRole!==\"super_admin\"){alert(\"Only Super Admin can delete RBTs.\");return;}if(!window.confirm(`Are you sure you want to delete ${rbt.id}?`))return;await deleteDoc(doc(db,\"clients\",client,\"sites\",rbt.site,\"rbts\",rbt.id));setRows(prev=>prev.filter(row=>!(row.id===rbt.id&&row.site===rbt.site)));};// Handle inline edits (super admin) for base text fields\nconst makeEditCommitHandler=site=>async params=>{const row=rows.find(r=>r.site===site&&r.id===params.id);if(!row)return;const blocked=[\"running_status\",\"breakdown_status\",\"work\",\"part_issues_btn\",\"actions\",\"target_date\",\"ageing\"];if(blocked.includes(params.field))return;await updateFieldWithLog(row,params.field,params.value);};return/*#__PURE__*/_jsxs(Box,{sx:{width:\"100%\",p:2},children:[sites.map(site=>/*#__PURE__*/_jsxs(Box,{sx:{mb:3,p:2,borderRadius:3,background:\"linear-gradient(180deg, #ffffff 0%, #fafafa 100%)\",boxShadow:\"0 6px 18px rgba(0,0,0,0.06)\",border:\"1px solid #eef0f3\"},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",sx:{mb:1.5,fontWeight:700,color:\"primary.main\"},children:[\"RBT Dashboard - \",site]}),/*#__PURE__*/_jsx(DataGrid,{autoHeight:true,density:\"compact\",rowHeight:44,headerHeight:44,loading:loading,rows:rows.filter(r=>r.site===site),columns:columns,components:{Toolbar:GridToolbar,LoadingOverlay:LinearProgress},componentsProps:{toolbar:{showQuickFilter:true,quickFilterProps:{debounceMs:300}}},getRowClassName:params=>getSelectedPartCount(params.row)>0?\"row-has-issues\":\"\",onCellEditCommit:makeEditCommitHandler(site),initialState:{pagination:{paginationModel:{pageSize:25}}},pageSizeOptions:[10,25,50],disableColumnMenu:true,disableSelectionOnClick:true,sx:{borderRadius:2,border:\"1px solid #e6e9ef\",overflow:\"visible\",\"& .MuiDataGrid-row\":{overflow:\"visible\"},\"& .MuiDataGrid-cell\":{overflow:\"visible\",alignItems:\"center\",whiteSpace:\"nowrap\",textOverflow:\"ellipsis\"},\"& .MuiDataGrid-columnHeaders\":{fontWeight:700,background:\"linear-gradient(180deg, rgba(248,250,252,1) 0%, rgba(242,245,250,1) 100%)\",borderBottom:\"1px solid #e6e9ef\"},\"& .MuiDataGrid-columnHeaderTitle\":{whiteSpace:\"nowrap\"},\"& .MuiDataGrid-row:hover\":{backgroundColor:\"rgba(33, 150, 243, 0.06)\"},\"& .MuiDataGrid-virtualScrollerContent\":{minHeight:\"auto\"},\"& .row-has-issues\":{backgroundColor:\"rgba(255, 193, 7, 0.08)\"},\"& .row-has-issues.Mui-selected\":{backgroundColor:\"rgba(255, 193, 7, 0.16) !important\"},\"& .MuiDataGrid-row:nth-of-type(even)\":{backgroundColor:\"#fcfdff\"},\"& .MuiDataGrid-footerContainer\":{borderTop:\"1px solid #e6e9ef\"}}})]},site)),/*#__PURE__*/_jsxs(Dialog,{open:Boolean(selectedRBT)// Block esc/backdrop only when a status change is pending & date is required\n,disableEscapeKeyDown:Boolean(pendingUpdates),onClose:(_,reason)=>{if(pendingUpdates&&(reason===\"backdropClick\"||reason===\"escapeKeyDown\")){return;// block closing\n}setSelectedRBT(null);setPendingUpdates(null);},maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsxs(DialogTitle,{sx:{display:\"flex\",alignItems:\"center\",gap:1,fontWeight:700},children:[\"Part Issues \\u2014 \",selectedRBT===null||selectedRBT===void 0?void 0:selectedRBT.id,pendingUpdates&&/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(WarningAmberRoundedIcon,{sx:{fontSize:16}}),color:\"warning\",label:\"Target date required to confirm status change\",size:\"small\",sx:{ml:1,fontWeight:600,borderRadius:2}})]}),/*#__PURE__*/_jsxs(DialogContent,{dividers:true,sx:{pt:2},children:[/*#__PURE__*/_jsx(Box,{sx:{p:2,mb:2,borderRadius:2,bgcolor:\"rgba(242,245,250,0.8)\",border:\"1px solid #e6e9ef\"},children:/*#__PURE__*/_jsxs(Stack,{direction:{xs:\"column\",sm:\"row\"},gap:2,alignItems:\"center\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Stack,{direction:\"row\",gap:1,alignItems:\"center\",flexWrap:\"wrap\",children:[/*#__PURE__*/_jsx(Typography,{sx:{fontWeight:700},children:\"Status:\"}),/*#__PURE__*/_jsx(StatusChip,{label:`Run: ${(_ref4=(_pendingUpdates$runni=pendingUpdates===null||pendingUpdates===void 0?void 0:pendingUpdates.running_status)!==null&&_pendingUpdates$runni!==void 0?_pendingUpdates$runni:selectedRBT===null||selectedRBT===void 0?void 0:selectedRBT.running_status)!==null&&_ref4!==void 0?_ref4:\"-\"}`,color:getStatusColor(\"running_status\",(_ref5=(_pendingUpdates$runni2=pendingUpdates===null||pendingUpdates===void 0?void 0:pendingUpdates.running_status)!==null&&_pendingUpdates$runni2!==void 0?_pendingUpdates$runni2:selectedRBT===null||selectedRBT===void 0?void 0:selectedRBT.running_status)!==null&&_ref5!==void 0?_ref5:\"Auto\")}),/*#__PURE__*/_jsx(StatusChip,{label:`Brk: ${(_ref6=(_pendingUpdates$break=pendingUpdates===null||pendingUpdates===void 0?void 0:pendingUpdates.breakdown_status)!==null&&_pendingUpdates$break!==void 0?_pendingUpdates$break:selectedRBT===null||selectedRBT===void 0?void 0:selectedRBT.breakdown_status)!==null&&_ref6!==void 0?_ref6:\"-\"}`,color:getStatusColor(\"breakdown_status\",(_ref7=(_pendingUpdates$break2=pendingUpdates===null||pendingUpdates===void 0?void 0:pendingUpdates.breakdown_status)!==null&&_pendingUpdates$break2!==void 0?_pendingUpdates$break2:selectedRBT===null||selectedRBT===void 0?void 0:selectedRBT.breakdown_status)!==null&&_ref7!==void 0?_ref7:\"N/A\")})]}),/*#__PURE__*/_jsx(Box,{sx:{minWidth:260},children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,required:Boolean(pendingUpdates),label:\"Target Running Date\",type:\"date\",value:targetDate,onChange:e=>setTargetDate(e.target.value),InputLabelProps:{shrink:true},error:Boolean(pendingUpdates)&&!targetDate,helperText:Boolean(pendingUpdates)&&!targetDate?\"Required to confirm this status\":\" \",sx:{\"& .MuiOutlinedInput-root\":{height:42},\"& .MuiInputBase-input\":{textAlign:\"center\"}}})})]})}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",flexDirection:\"column\",gap:1.25,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:{fontWeight:700,mb:0.5},children:\"Select parts with issues (optional)\"}),/*#__PURE__*/_jsx(Divider,{}),Object.keys(partIssues||{}).sort().map(part=>{var _partIssues$part,_partIssues$part2,_partIssues$part3;const isSelected=(_partIssues$part=partIssues[part])===null||_partIssues$part===void 0?void 0:_partIssues$part.selected;return/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",gap:2,sx:{py:0.5,borderBottom:\"1px dashed #eee\"},children:[/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:!!isSelected,onChange:()=>togglePartSelectionWithLog(selectedRBT,part)}),label:/*#__PURE__*/_jsx(Typography,{sx:{minWidth:160,fontWeight:600},children:part}),sx:{flex:1}}),isSelected&&/*#__PURE__*/_jsxs(Box,{display:\"flex\",gap:2,flexWrap:\"wrap\",sx:{flex:2},children:[/*#__PURE__*/_jsx(TextField,{type:\"date\",label:\"Dispatch Date\",size:\"small\",value:((_partIssues$part2=partIssues[part])===null||_partIssues$part2===void 0?void 0:_partIssues$part2.dispatch_date)||\"\",onChange:e=>updatePartIssueFieldWithLog(selectedRBT,part,\"dispatch_date\",e.target.value),sx:{minWidth:160},InputLabelProps:{shrink:true}}),/*#__PURE__*/_jsx(TextField,{type:\"date\",label:\"Delivery Date\",size:\"small\",value:((_partIssues$part3=partIssues[part])===null||_partIssues$part3===void 0?void 0:_partIssues$part3.delivery_date)||\"\",onChange:e=>updatePartIssueFieldWithLog(selectedRBT,part,\"delivery_date\",e.target.value),sx:{minWidth:160},InputLabelProps:{shrink:true}})]})]},part);})]})]}),/*#__PURE__*/_jsxs(DialogActions,{sx:{p:2},children:[!pendingUpdates&&/*#__PURE__*/_jsx(Button,{onClick:()=>{setSelectedRBT(null);setPendingUpdates(null);},variant:\"text\",children:\"Close\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:async()=>{if(pendingUpdates){if(!targetDate)return;// guard, button is disabled anyway\n// 1) Save target date\nawait updateFieldWithLog(selectedRBT,\"target_date\",targetDate);// 2) Apply status updates together\nawait updateManyWithLog(selectedRBT,pendingUpdates);}else{// Manual open: Only save date if changed\nif(targetDate!==((selectedRBT===null||selectedRBT===void 0?void 0:selectedRBT.target_date)||\"\")){await updateFieldWithLog(selectedRBT,\"target_date\",targetDate);}}setSelectedRBT(null);setPendingUpdates(null);},disabled:Boolean(pendingUpdates)&&!targetDate,children:\"Save\"})]})]})]});};export default RBTDataGrid;","map":{"version":3,"names":["React","useEffect","useState","DataGrid","GridToolbar","collection","getDocs","doc","updateDoc","deleteDoc","getDoc","db","auth","logAndUpdateField","Chip","Box","LinearProgress","Dialog","DialogTitle","DialogContent","DialogActions","Button","TextField","Typography","FormControl","Select","MenuItem","Checkbox","FormControlLabel","Stack","Divider","Tooltip","DeleteOutlineIcon","EventIcon","ScheduleIcon","WarningAmberRoundedIcon","differenceInDays","format","jsx","_jsx","jsxs","_jsxs","ALL_PARTS","sort","generateDefaultPartIssues","defaults","forEach","part","selected","dispatch_date","delivery_date","asDate","maybeTs","toDate","d","Date","isNaN","computeAgeing","row","running_status","manualAt","running_manual_at","notRunAt","running_not_running_at","candidates","push","length","Number","running_status_ageing","older","a","b","Math","max","StatusChip","_ref","label","color","size","sx","fontWeight","borderRadius","px","minWidth","justifyContent","RBTDataGrid","_ref2","_auth$currentUser","_ref4","_pendingUpdates$runni","_ref5","_pendingUpdates$runni2","_ref6","_pendingUpdates$break","_ref7","_pendingUpdates$break2","client","sites","rows","setRows","loading","setLoading","selectedRBT","setSelectedRBT","partIssues","setPartIssues","targetDate","setTargetDate","pendingUpdates","setPendingUpdates","userRole","setUserRole","userEmail","currentUser","email","fetchRole","userRef","uid","userSnap","exists","data","role","fetchRBTs","allRBTs","Promise","all","map","site","snapshot","docs","docSnap","_rbtData$running_stat","rbtData","id","breakdown_status","work","target_date","part_issues","mergedRBTs","flat","localeCompare","numA","parseInt","String","replace","numB","error","console","JSON","stringify","updateFieldWithLog","field","newValue","_row$field","oldValue","rbtRef","prev","r","updateManyWithLog","updates","Object","entries","_row$field2","updatePartIssueFieldWithLog","subField","_row$part_issues","path","prevIssues","prevRows","_r$part_issues","togglePartSelectionWithLog","_row$part_issues2","nextSelected","nextObj","p","getStatusColor","value","openIssueDialogFor","pending","beginStatusChange","currentRun","currentBrk","nextBrk","nextRun","renderDropdown","params","options","width","children","onChange","e","target","displayEmpty","fullWidth","MenuProps","disablePortal","container","document","body","PaperProps","zIndex","maxHeight","MenuListProps","dense","display","alignItems","py","opt","openPartIssues","getSelectedPartCount","values","filter","baseEditable","columns","headerName","flex","headerAlign","align","editable","renderCell","run","brk","showWork","style","opacity","sortable","icon","fontSize","variant","valueGetter","_ref3","v","count","title","onClick","startIcon","handleDeleteRBT","rbt","alert","window","confirm","makeEditCommitHandler","find","blocked","includes","mb","background","boxShadow","border","autoHeight","density","rowHeight","headerHeight","components","Toolbar","LoadingOverlay","componentsProps","toolbar","showQuickFilter","quickFilterProps","debounceMs","getRowClassName","onCellEditCommit","initialState","pagination","paginationModel","pageSize","pageSizeOptions","disableColumnMenu","disableSelectionOnClick","overflow","whiteSpace","textOverflow","borderBottom","backgroundColor","minHeight","borderTop","open","Boolean","disableEscapeKeyDown","onClose","_","reason","maxWidth","gap","ml","dividers","pt","bgcolor","direction","xs","sm","flexWrap","required","type","InputLabelProps","shrink","helperText","height","textAlign","flexDirection","keys","_partIssues$part","_partIssues$part2","_partIssues$part3","isSelected","control","checked","disabled"],"sources":["C:/Users/mis/rbt-dashboard/src/pages/RBTDataGrid.jsx"],"sourcesContent":["// src/components/RBTDataGrid.jsx\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\r\nimport { collection, getDocs, doc, updateDoc, deleteDoc, getDoc } from \"firebase/firestore\";\r\nimport { db, auth } from \"../firebase\";\r\nimport { logAndUpdateField } from \"../utils/db\";\r\nimport {\r\n    Chip,\r\n    Box,\r\n    LinearProgress,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Button,\r\n    TextField,\r\n    Typography,\r\n    FormControl,\r\n    Select,\r\n    MenuItem,\r\n    Checkbox,\r\n    FormControlLabel,\r\n    Stack,\r\n    Divider,\r\n    Tooltip,\r\n} from \"@mui/material\";\r\nimport DeleteOutlineIcon from \"@mui/icons-material/DeleteOutline\";\r\nimport EventIcon from \"@mui/icons-material/Event\";\r\nimport ScheduleIcon from \"@mui/icons-material/Schedule\";\r\nimport WarningAmberRoundedIcon from \"@mui/icons-material/WarningAmberRounded\";\r\nimport { differenceInDays, format } from \"date-fns\";\r\n\r\nconst ALL_PARTS = [\r\n    \"ANTENA CABLE\", \"ANTENA PORT\", \"BATTERY\", \"BATTERY BOX\", \"BRUSH MOTOR\",\r\n    \"CHARGE CONTROLLER\", \"GUIDE WHEEL 1\", \"GUIDE WHEEL 2\", \"GUIDE WHEEL 3\", \"GUIDE WHEEL 4\",\r\n    \"HOME SENSOR\", \"LIMIT SWITCH 1\", \"LIMIT SWITCH 2\", \"LOAD WHEEL 1\", \"LOAD WHEEL 2\",\r\n    \"LOAD WHEEL 3\", \"LOAD WHEEL 4\", \"LT 1\", \"LT 2\", \"PCB BOX\", \"PULSE COUNT\", \"PV MODULE\",\r\n    \"REPEATER PCB\", \"RTC\", \"SS PIPE\", \"SSC\", \"STEPPER DRIVE\", \"STEPPER MOTOR\", \"TC BELT\",\r\n    \"TC LOAD WHEEL\", \"XBEE\"\r\n].sort();\r\n\r\nconst generateDefaultPartIssues = () => {\r\n    const defaults = {};\r\n    ALL_PARTS.forEach((part) => {\r\n        defaults[part] = { selected: false, dispatch_date: \"\", delivery_date: \"\" };\r\n    });\r\n    return defaults;\r\n};\r\n\r\n// ------- helpers -------\r\nconst asDate = (maybeTs) => {\r\n    if (!maybeTs) return null;\r\n    if (typeof maybeTs.toDate === \"function\") return maybeTs.toDate();\r\n    const d = new Date(maybeTs);\r\n    return isNaN(d) ? null : d;\r\n};\r\n\r\nconst computeAgeing = (row) => {\r\n    if (!row || row.running_status === \"Auto\") return 0;\r\n    const manualAt = asDate(row.running_manual_at);\r\n    const notRunAt = asDate(row.running_not_running_at);\r\n    const candidates = [];\r\n    if (manualAt) candidates.push(manualAt);\r\n    if (notRunAt) candidates.push(notRunAt);\r\n    if (!candidates.length) return Number(row.running_status_ageing || 0);\r\n    const older = candidates.sort((a, b) => a - b)[0];\r\n    return Math.max(differenceInDays(new Date(), older), 0);\r\n};\r\n\r\n// nicer chip render\r\nconst StatusChip = ({ label, color }) => (\r\n    <Chip\r\n        label={label}\r\n        color={color}\r\n        size=\"small\"\r\n        sx={{\r\n            fontWeight: 600,\r\n            borderRadius: 2,\r\n            px: 1,\r\n            minWidth: 96,\r\n            justifyContent: \"center\",\r\n        }}\r\n    />\r\n);\r\n\r\nconst RBTDataGrid = ({ client, sites }) => {\r\n    const [rows, setRows] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [selectedRBT, setSelectedRBT] = useState(null);\r\n    const [partIssues, setPartIssues] = useState({});\r\n    const [targetDate, setTargetDate] = useState(\"\"); // YYYY-MM-DD\r\n    const [pendingUpdates, setPendingUpdates] = useState(null); // { running_status?, breakdown_status? }\r\n    const [userRole, setUserRole] = useState(\"user\");\r\n    const userEmail = auth.currentUser?.email || \"\";\r\n\r\n    // ✅ Fetch user role\r\n    useEffect(() => {\r\n        const fetchRole = async () => {\r\n            if (userEmail) {\r\n                const userRef = doc(db, \"users\", auth.currentUser.uid);\r\n                const userSnap = await getDoc(userRef);\r\n                if (userSnap.exists()) setUserRole(userSnap.data().role || \"user\");\r\n            }\r\n        };\r\n        fetchRole();\r\n    }, [userEmail]);\r\n\r\n    // ✅ Fetch RBTs (multi-site)\r\n    useEffect(() => {\r\n        const fetchRBTs = async () => {\r\n            if (!client || !sites || sites.length === 0) {\r\n                setRows([]);\r\n                return;\r\n            }\r\n            setLoading(true);\r\n            try {\r\n                const allRBTs = await Promise.all(\r\n                    sites.map(async (site) => {\r\n                        const snapshot = await getDocs(collection(db, \"clients\", client, \"sites\", site, \"rbts\"));\r\n                        return snapshot.docs.map((docSnap) => {\r\n                            const rbtData = docSnap.data();\r\n                            return {\r\n                                id: docSnap.id,\r\n                                site,\r\n                                running_status: rbtData.running_status || \"Auto\",\r\n                                breakdown_status: rbtData.breakdown_status || \"N/A\",\r\n                                work: rbtData.work || \"\",\r\n                                target_date: rbtData.target_date || \"\", // YYYY-MM-DD\r\n                                running_status_ageing: rbtData.running_status_ageing ?? 0,\r\n                                running_manual_at: rbtData.running_manual_at || null,\r\n                                running_not_running_at: rbtData.running_not_running_at || null,\r\n                                part_issues: { ...generateDefaultPartIssues(), ...(rbtData.part_issues || {}) },\r\n                                ...rbtData,\r\n                            };\r\n                        });\r\n                    })\r\n                );\r\n\r\n                const mergedRBTs = allRBTs.flat();\r\n                // ✅ Sort by site then RBT number\r\n                mergedRBTs.sort((a, b) => {\r\n                    if (a.site !== b.site) return a.site.localeCompare(b.site);\r\n                    const numA = parseInt(String(a.id).replace(/\\D/g, \"\"), 10) || 0;\r\n                    const numB = parseInt(String(b.id).replace(/\\D/g, \"\"), 10) || 0;\r\n                    return numA - numB;\r\n                });\r\n\r\n                setRows(mergedRBTs);\r\n            } catch (error) {\r\n                console.error(\"Error fetching RBTs:\", error);\r\n            }\r\n            setLoading(false);\r\n        };\r\n        fetchRBTs();\r\n    }, [client, JSON.stringify(sites)]);\r\n\r\n    // ========== LOG HELPERS ==========\r\n    const updateFieldWithLog = async (row, field, newValue) => {\r\n        const oldValue = row[field] ?? \"\";\r\n        if (oldValue === newValue) return;\r\n        const rbtRef = doc(db, \"clients\", client, \"sites\", row.site, \"rbts\", row.id);\r\n        await updateDoc(rbtRef, { [field]: newValue });\r\n        await logAndUpdateField(client, row.site, row.id, field, oldValue, newValue);\r\n        setRows((prev) => prev.map((r) => (r.id === row.id && r.site === row.site ? { ...r, [field]: newValue } : r)));\r\n    };\r\n\r\n    const updateManyWithLog = async (row, updates) => {\r\n        // single Firestore update, then log each field change\r\n        const rbtRef = doc(db, \"clients\", client, \"sites\", row.site, \"rbts\", row.id);\r\n        await updateDoc(rbtRef, updates);\r\n        for (const [field, newValue] of Object.entries(updates)) {\r\n            const oldValue = row[field] ?? \"\";\r\n            if (oldValue !== newValue) {\r\n                await logAndUpdateField(client, row.site, row.id, field, oldValue, newValue);\r\n            }\r\n        }\r\n        setRows((prev) =>\r\n            prev.map((r) => (r.id === row.id && r.site === row.site ? { ...r, ...updates } : r))\r\n        );\r\n    };\r\n\r\n    const updatePartIssueFieldWithLog = async (row, part, subField, newValue) => {\r\n        const prev = row.part_issues?.[part] || { selected: false, dispatch_date: \"\", delivery_date: \"\" };\r\n        const oldValue = prev?.[subField] || \"\";\r\n        if (oldValue === newValue) return;\r\n\r\n        const rbtRef = doc(db, \"clients\", client, \"sites\", row.site, \"rbts\", row.id);\r\n        const path = `part_issues.${part}.${subField}`;\r\n        await updateDoc(rbtRef, { [path]: newValue });\r\n        await logAndUpdateField(client, row.site, row.id, path, oldValue, newValue);\r\n\r\n        setPartIssues((prevIssues) => ({\r\n            ...prevIssues,\r\n            [part]: { ...(prevIssues[part] || {}), [subField]: newValue },\r\n        }));\r\n        setRows((prevRows) =>\r\n            prevRows.map((r) =>\r\n                r.id === row.id && r.site === row.site\r\n                    ? {\r\n                        ...r,\r\n                        part_issues: {\r\n                            ...r.part_issues,\r\n                            [part]: { ...(r.part_issues?.[part] || {}), [subField]: newValue },\r\n                        },\r\n                    }\r\n                    : r\r\n            )\r\n        );\r\n    };\r\n\r\n    const togglePartSelectionWithLog = async (row, part) => {\r\n        const prev = row.part_issues?.[part] || { selected: false, dispatch_date: \"\", delivery_date: \"\" };\r\n        const nextSelected = !prev.selected;\r\n        const nextObj = {\r\n            selected: nextSelected,\r\n            dispatch_date: nextSelected ? prev.dispatch_date || \"\" : \"\",\r\n            delivery_date: nextSelected ? prev.delivery_date || \"\" : \"\",\r\n        };\r\n\r\n        const rbtRef = doc(db, \"clients\", client, \"sites\", row.site, \"rbts\", row.id);\r\n        const path = `part_issues.${part}`;\r\n        await updateDoc(rbtRef, { [path]: nextObj });\r\n        await logAndUpdateField(client, row.site, row.id, path, JSON.stringify(prev), JSON.stringify(nextObj));\r\n\r\n        setPartIssues((p) => ({ ...p, [part]: nextObj }));\r\n        setRows((prevRows) =>\r\n            prevRows.map((r) =>\r\n                r.id === row.id && r.site === row.site\r\n                    ? { ...r, part_issues: { ...r.part_issues, [part]: nextObj } }\r\n                    : r\r\n            )\r\n        );\r\n    };\r\n\r\n    // ========= UI HELPERS (COLORS) =========\r\n    const getStatusColor = (field, value) => {\r\n        if (field === \"running_status\") {\r\n            if (value === \"Auto\") return \"success\";\r\n            if (value === \"Manual\") return \"warning\";\r\n            return \"error\";\r\n        }\r\n        if (field === \"breakdown_status\") {\r\n            if (value === \"Running With Issue\") return \"warning\";\r\n            if (value === \"Breakdown\") return \"error\";\r\n            return \"default\";\r\n        }\r\n        if (field === \"work\") {\r\n            if (value === \"Part Installation\") return \"info\";\r\n            if (value === \"Part Testing\") return \"secondary\";\r\n            if (value === \"Trial\") return \"warning\";\r\n            if (value === \"Auto Scheduling\") return \"success\";\r\n            return \"default\";\r\n        }\r\n        return \"default\";\r\n    };\r\n\r\n    // ========= STATUS CHANGE ORCHESTRATION =========\r\n\r\n    const openIssueDialogFor = (row, pending) => {\r\n        setSelectedRBT(row);\r\n        setPartIssues(row.part_issues || generateDefaultPartIssues());\r\n        setTargetDate(row.target_date || \"\");\r\n        setPendingUpdates(pending); // { running_status?, breakdown_status? }\r\n    };\r\n\r\n    const beginStatusChange = async (row, field, newValue) => {\r\n        const currentRun = row.running_status || \"Auto\";\r\n        const currentBrk = row.breakdown_status || \"N/A\";\r\n\r\n        if (field === \"running_status\") {\r\n            if (newValue === \"Auto\") {\r\n                // Back to nominal: apply immediately\r\n                await updateManyWithLog(row, { running_status: \"Auto\", breakdown_status: \"N/A\" });\r\n                return;\r\n            }\r\n            // Require part issues dialog + target date\r\n            const nextBrk = currentBrk === \"N/A\" ? \"Running With Issue\" : currentBrk;\r\n            const pending = { running_status: newValue };\r\n            if (nextBrk !== currentBrk) pending.breakdown_status = nextBrk;\r\n            openIssueDialogFor(row, pending);\r\n            return;\r\n        }\r\n\r\n        if (field === \"breakdown_status\") {\r\n            if (newValue === \"N/A\") {\r\n                // Nominal => Auto\r\n                await updateManyWithLog(row, { breakdown_status: \"N/A\", running_status: \"Auto\" });\r\n                return;\r\n            }\r\n            // Non-N/A requires target date and possibly set run from Auto -> Manual\r\n            const nextRun = currentRun === \"Auto\" ? \"Manual\" : currentRun;\r\n            const pending = { breakdown_status: newValue };\r\n            if (nextRun !== currentRun) pending.running_status = nextRun;\r\n            openIssueDialogFor(row, pending);\r\n            return;\r\n        }\r\n\r\n        // other fields (work etc.) normal update\r\n        await updateFieldWithLog(row, field, newValue);\r\n    };\r\n\r\n    // ✅ DROPDOWN: render in a portal so it never gets clipped; comfy size\r\n    const renderDropdown = (params, field, options) => (\r\n        <FormControl size=\"small\" sx={{ minWidth: 140, width: \"100%\" }}>\r\n            <Select\r\n                value={params.value || \"\"}\r\n                onChange={async (e) => {\r\n                    const newValue = e.target.value;\r\n                    await beginStatusChange(params.row, field, newValue);\r\n\r\n                    if (\r\n                        (field === \"running_status\" && (newValue === \"Manual\" || newValue === \"Not Running\")) ||\r\n                        (field === \"breakdown_status\" && (newValue === \"Breakdown\" || newValue === \"Running With Issue\"))\r\n                    ) {\r\n                        // opening dialog already handled in beginStatusChange\r\n                    }\r\n                }}\r\n                displayEmpty\r\n                fullWidth\r\n                MenuProps={{\r\n                    disablePortal: false,\r\n                    container: () => document.body,\r\n                    PaperProps: {\r\n                        sx: {\r\n                            zIndex: 2000,\r\n                            minWidth: 220,\r\n                            maxHeight: 360,\r\n                            borderRadius: 2,\r\n                        },\r\n                    },\r\n                    MenuListProps: { dense: true },\r\n                }}\r\n                sx={{\r\n                    width: \"100%\",\r\n                    \"& .MuiSelect-select\": { display: \"flex\", alignItems: \"center\", py: 0.5 },\r\n                }}\r\n            >\r\n                {options.map((opt) => (\r\n                    <MenuItem key={opt} value={opt}>\r\n                        <StatusChip label={opt} color={getStatusColor(field, opt)} />\r\n                    </MenuItem>\r\n                ))}\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n\r\n    const openPartIssues = (row) => {\r\n        // Manual open (no status pending). Let them edit parts/target_date optionally.\r\n        setSelectedRBT(row);\r\n        setPartIssues(row.part_issues || generateDefaultPartIssues());\r\n        setTargetDate(row.target_date || \"\");\r\n        setPendingUpdates(null); // no pending status change\r\n    };\r\n\r\n    const getSelectedPartCount = (row) =>\r\n        Object.values(row.part_issues || {}).filter((p) => p?.selected).length;\r\n\r\n    // ====== Columns ======\r\n    const baseEditable = userRole === \"super_admin\";\r\n\r\n    const columns = [\r\n        { field: \"site\", headerName: \"Site\", flex: 0.7, minWidth: 110, headerAlign: \"center\", align: \"center\" },\r\n        { field: \"id\", headerName: \"RBT ID\", flex: 0.6, minWidth: 90, headerAlign: \"center\", align: \"center\" },\r\n        { field: \"cleaner_did\", headerName: \"Cleaner DID\", flex: 1.2, minWidth: 160, editable: baseEditable },\r\n        { field: \"tc_did\", headerName: \"TC DID\", flex: 1.2, minWidth: 160, editable: baseEditable },\r\n        { field: \"cl_pcb_model\", headerName: \"CL PCB Model\", flex: 0.8, minWidth: 110, headerAlign: \"center\", align: \"center\", editable: baseEditable },\r\n        { field: \"tc_pcb_model\", headerName: \"TC PCB Model\", flex: 0.8, minWidth: 110, headerAlign: \"center\", align: \"center\", editable: baseEditable },\r\n        {\r\n            field: \"running_status\",\r\n            headerName: \"Running Status\",\r\n            flex: 0.9,\r\n            minWidth: 170,\r\n            headerAlign: \"center\",\r\n            align: \"center\",\r\n            renderCell: (params) => renderDropdown(params, \"running_status\", [\"Auto\", \"Manual\", \"Not Running\"]),\r\n        },\r\n        {\r\n            field: \"breakdown_status\",\r\n            headerName: \"Breakdown Status\",\r\n            flex: 1.0,\r\n            minWidth: 170,\r\n            headerAlign: \"center\",\r\n            align: \"center\",\r\n            renderCell: (params) => renderDropdown(params, \"breakdown_status\", [\"Running With Issue\", \"Breakdown\", \"N/A\"]),\r\n        },\r\n        {\r\n            field: \"work\",\r\n            headerName: \"Work Status\",\r\n            flex: 1.0,\r\n            minWidth: 170,\r\n            headerAlign: \"center\",\r\n            align: \"center\",\r\n            renderCell: (params) => {\r\n                const run = params.row.running_status || \"\";\r\n                const brk = params.row.breakdown_status || \"\";\r\n                const showWork = run !== \"Auto\" || brk !== \"N/A\";\r\n                if (!showWork) return <span style={{ opacity: 0.45 }}>—</span>;\r\n                return renderDropdown(params, \"work\", [\r\n                    \"Part Procurement\",\r\n                    \"Part In-Transit\",\r\n                    \"Part Installation\",\r\n                    \"Part Testing\",\r\n                    \"Trial\",\r\n                    \"Auto Scheduling\",\r\n                ]);\r\n            },\r\n        },\r\n        // Target Date (read-only in grid for cleanliness)\r\n        {\r\n            field: \"target_date\",\r\n            headerName: \"Target Date\",\r\n            flex: 0.85,\r\n            minWidth: 150,\r\n            headerAlign: \"center\",\r\n            align: \"center\",\r\n            sortable: false,\r\n            renderCell: (params) => {\r\n                const value = params.row.target_date || \"\";\r\n                if (!value) return <span style={{ opacity: 0.45 }}>—</span>;\r\n                // show as dd-MMM-yyyy\r\n                let label = value;\r\n                try { label = format(new Date(value), \"dd-MMM-yyyy\"); } catch { }\r\n                return (\r\n                    <Chip\r\n                        icon={<EventIcon sx={{ fontSize: 16 }} />}\r\n                        label={label}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        sx={{ borderRadius: 2, fontWeight: 600 }}\r\n                    />\r\n                );\r\n            },\r\n        },\r\n        // Ageing (computed) — handle both v5/v6 signatures\r\n        {\r\n            field: \"ageing\",\r\n            headerName: \"Ageing\",\r\n            flex: 0.55,\r\n            minWidth: 90,\r\n            headerAlign: \"center\",\r\n            align: \"center\",\r\n            valueGetter: (value, row, params) => {\r\n                const r = row ?? params?.row ?? null;\r\n                return computeAgeing(r);\r\n            },\r\n            renderCell: (params) => {\r\n                const v = Number(params.value || 0);\r\n                const color = v > 14 ? \"error\" : v > 7 ? \"warning\" : \"default\";\r\n                return (\r\n                    <Chip\r\n                        icon={<ScheduleIcon sx={{ fontSize: 16 }} />}\r\n                        color={color}\r\n                        variant={color === \"default\" ? \"outlined\" : \"filled\"}\r\n                        size=\"small\"\r\n                        label={`${v}d`}\r\n                        sx={{ borderRadius: 2, fontWeight: 700, minWidth: 64, justifyContent: \"center\" }}\r\n                    />\r\n                );\r\n            },\r\n        },\r\n        {\r\n            field: \"part_issues_btn\",\r\n            headerName: \"Part Issues\",\r\n            flex: 0.9,\r\n            minWidth: 130,\r\n            sortable: false,\r\n            headerAlign: \"center\",\r\n            align: \"center\",\r\n            renderCell: (params) => {\r\n                const count = getSelectedPartCount(params.row);\r\n                return (\r\n                    <Tooltip title=\"Open part issues & target date\">\r\n                        <Button variant=\"outlined\" size=\"small\" onClick={() => openPartIssues(params.row)}>\r\n                            {count > 0 ? `Part Issues (${count})` : \"Part Issues\"}\r\n                        </Button>\r\n                    </Tooltip>\r\n                );\r\n            },\r\n        },\r\n        ...(userRole === \"super_admin\"\r\n            ? [\r\n                {\r\n                    field: \"actions\",\r\n                    headerName: \"Actions\",\r\n                    flex: 0.6,\r\n                    minWidth: 108,\r\n                    headerAlign: \"center\",\r\n                    align: \"center\",\r\n                    sortable: false,\r\n                    renderCell: (params) => (\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            color=\"error\"\r\n                            startIcon={<DeleteOutlineIcon />}\r\n                            onClick={() => handleDeleteRBT(params.row)}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    ),\r\n                },\r\n            ]\r\n            : []),\r\n    ];\r\n\r\n    // ✅ Delete RBT (Super Admin only)\r\n    const handleDeleteRBT = async (rbt) => {\r\n        if (userRole !== \"super_admin\") {\r\n            alert(\"Only Super Admin can delete RBTs.\");\r\n            return;\r\n        }\r\n        if (!window.confirm(`Are you sure you want to delete ${rbt.id}?`)) return;\r\n        await deleteDoc(doc(db, \"clients\", client, \"sites\", rbt.site, \"rbts\", rbt.id));\r\n        setRows((prev) => prev.filter((row) => !(row.id === rbt.id && row.site === rbt.site)));\r\n    };\r\n\r\n    // Handle inline edits (super admin) for base text fields\r\n    const makeEditCommitHandler = (site) => async (params) => {\r\n        const row = rows.find((r) => r.site === site && r.id === params.id);\r\n        if (!row) return;\r\n        const blocked = [\r\n            \"running_status\",\r\n            \"breakdown_status\",\r\n            \"work\",\r\n            \"part_issues_btn\",\r\n            \"actions\",\r\n            \"target_date\",\r\n            \"ageing\",\r\n        ];\r\n        if (blocked.includes(params.field)) return;\r\n        await updateFieldWithLog(row, params.field, params.value);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ width: \"100%\", p: 2 }}>\r\n            {sites.map((site) => (\r\n                <Box\r\n                    key={site}\r\n                    sx={{\r\n                        mb: 3,\r\n                        p: 2,\r\n                        borderRadius: 3,\r\n                        background: \"linear-gradient(180deg, #ffffff 0%, #fafafa 100%)\",\r\n                        boxShadow: \"0 6px 18px rgba(0,0,0,0.06)\",\r\n                        border: \"1px solid #eef0f3\",\r\n                    }}\r\n                >\r\n                    <Typography variant=\"h6\" sx={{ mb: 1.5, fontWeight: 700, color: \"primary.main\" }}>\r\n                        RBT Dashboard - {site}\r\n                    </Typography>\r\n\r\n                    <DataGrid\r\n                        autoHeight\r\n                        density=\"compact\"\r\n                        rowHeight={44}\r\n                        headerHeight={44}\r\n                        loading={loading}\r\n                        rows={rows.filter((r) => r.site === site)}\r\n                        columns={columns}\r\n                        components={{ Toolbar: GridToolbar, LoadingOverlay: LinearProgress }}\r\n                        componentsProps={{\r\n                            toolbar: { showQuickFilter: true, quickFilterProps: { debounceMs: 300 } },\r\n                        }}\r\n                        getRowClassName={(params) => (getSelectedPartCount(params.row) > 0 ? \"row-has-issues\" : \"\")}\r\n                        onCellEditCommit={makeEditCommitHandler(site)}\r\n                        initialState={{\r\n                            pagination: { paginationModel: { pageSize: 25 } },\r\n                        }}\r\n                        pageSizeOptions={[10, 25, 50]}\r\n                        disableColumnMenu\r\n                        disableSelectionOnClick\r\n                        sx={{\r\n                            borderRadius: 2,\r\n                            border: \"1px solid #e6e9ef\",\r\n                            overflow: \"visible\",\r\n                            \"& .MuiDataGrid-row\": { overflow: \"visible\" },\r\n                            \"& .MuiDataGrid-cell\": {\r\n                                overflow: \"visible\",\r\n                                alignItems: \"center\",\r\n                                whiteSpace: \"nowrap\",\r\n                                textOverflow: \"ellipsis\",\r\n                            },\r\n                            \"& .MuiDataGrid-columnHeaders\": {\r\n                                fontWeight: 700,\r\n                                background:\r\n                                    \"linear-gradient(180deg, rgba(248,250,252,1) 0%, rgba(242,245,250,1) 100%)\",\r\n                                borderBottom: \"1px solid #e6e9ef\",\r\n                            },\r\n                            \"& .MuiDataGrid-columnHeaderTitle\": { whiteSpace: \"nowrap\" },\r\n                            \"& .MuiDataGrid-row:hover\": {\r\n                                backgroundColor: \"rgba(33, 150, 243, 0.06)\",\r\n                            },\r\n                            \"& .MuiDataGrid-virtualScrollerContent\": { minHeight: \"auto\" },\r\n                            \"& .row-has-issues\": {\r\n                                backgroundColor: \"rgba(255, 193, 7, 0.08)\",\r\n                            },\r\n                            \"& .row-has-issues.Mui-selected\": {\r\n                                backgroundColor: \"rgba(255, 193, 7, 0.16) !important\",\r\n                            },\r\n                            \"& .MuiDataGrid-row:nth-of-type(even)\": {\r\n                                backgroundColor: \"#fcfdff\",\r\n                            },\r\n                            \"& .MuiDataGrid-footerContainer\": {\r\n                                borderTop: \"1px solid #e6e9ef\",\r\n                            },\r\n                        }}\r\n                    />\r\n                </Box>\r\n            ))}\r\n\r\n            {/* Part Issues + Target Date Dialog */}\r\n            <Dialog\r\n                open={Boolean(selectedRBT)}\r\n                // Block esc/backdrop only when a status change is pending & date is required\r\n                disableEscapeKeyDown={Boolean(pendingUpdates)}\r\n                onClose={(_, reason) => {\r\n                    if (pendingUpdates && (reason === \"backdropClick\" || reason === \"escapeKeyDown\")) {\r\n                        return; // block closing\r\n                    }\r\n                    setSelectedRBT(null);\r\n                    setPendingUpdates(null);\r\n                }}\r\n                maxWidth=\"md\"\r\n                fullWidth\r\n            >\r\n                <DialogTitle sx={{ display: \"flex\", alignItems: \"center\", gap: 1, fontWeight: 700 }}>\r\n                    Part Issues — {selectedRBT?.id}\r\n                    {pendingUpdates && (\r\n                        <Chip\r\n                            icon={<WarningAmberRoundedIcon sx={{ fontSize: 16 }} />}\r\n                            color=\"warning\"\r\n                            label=\"Target date required to confirm status change\"\r\n                            size=\"small\"\r\n                            sx={{ ml: 1, fontWeight: 600, borderRadius: 2 }}\r\n                        />\r\n                    )}\r\n                </DialogTitle>\r\n\r\n                <DialogContent dividers sx={{ pt: 2 }}>\r\n                    {/* Summary + Target Date */}\r\n                    <Box\r\n                        sx={{\r\n                            p: 2,\r\n                            mb: 2,\r\n                            borderRadius: 2,\r\n                            bgcolor: \"rgba(242,245,250,0.8)\",\r\n                            border: \"1px solid #e6e9ef\",\r\n                        }}\r\n                    >\r\n                        <Stack direction={{ xs: \"column\", sm: \"row\" }} gap={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n                            <Stack direction=\"row\" gap={1} alignItems=\"center\" flexWrap=\"wrap\">\r\n                                <Typography sx={{ fontWeight: 700 }}>Status:</Typography>\r\n                                <StatusChip\r\n                                    label={`Run: ${pendingUpdates?.running_status ?? selectedRBT?.running_status ?? \"-\"}`}\r\n                                    color={getStatusColor(\"running_status\", pendingUpdates?.running_status ?? selectedRBT?.running_status ?? \"Auto\")}\r\n                                />\r\n                                <StatusChip\r\n                                    label={`Brk: ${pendingUpdates?.breakdown_status ?? selectedRBT?.breakdown_status ?? \"-\"}`}\r\n                                    color={getStatusColor(\"breakdown_status\", pendingUpdates?.breakdown_status ?? selectedRBT?.breakdown_status ?? \"N/A\")}\r\n                                />\r\n                            </Stack>\r\n\r\n                            <Box sx={{ minWidth: 260 }}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    required={Boolean(pendingUpdates)}\r\n                                    label=\"Target Running Date\"\r\n                                    type=\"date\"\r\n                                    value={targetDate}\r\n                                    onChange={(e) => setTargetDate(e.target.value)}\r\n                                    InputLabelProps={{ shrink: true }}\r\n                                    error={Boolean(pendingUpdates) && !targetDate}\r\n                                    helperText={Boolean(pendingUpdates) && !targetDate ? \"Required to confirm this status\" : \" \"}\r\n                                    sx={{\r\n                                        \"& .MuiOutlinedInput-root\": { height: 42 },\r\n                                        \"& .MuiInputBase-input\": { textAlign: \"center\" },\r\n                                    }}\r\n                                />\r\n                            </Box>\r\n                        </Stack>\r\n                    </Box>\r\n\r\n                    {/* Parts list */}\r\n                    <Box display=\"flex\" flexDirection=\"column\" gap={1.25}>\r\n                        <Typography variant=\"subtitle2\" sx={{ fontWeight: 700, mb: 0.5 }}>\r\n                            Select parts with issues (optional)\r\n                        </Typography>\r\n                        <Divider />\r\n                        {Object.keys(partIssues || {})\r\n                            .sort()\r\n                            .map((part) => {\r\n                                const isSelected = partIssues[part]?.selected;\r\n                                return (\r\n                                    <Box\r\n                                        key={part}\r\n                                        display=\"flex\"\r\n                                        alignItems=\"center\"\r\n                                        gap={2}\r\n                                        sx={{ py: 0.5, borderBottom: \"1px dashed #eee\" }}\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Checkbox\r\n                                                    checked={!!isSelected}\r\n                                                    onChange={() => togglePartSelectionWithLog(selectedRBT, part)}\r\n                                                />\r\n                                            }\r\n                                            label={<Typography sx={{ minWidth: 160, fontWeight: 600 }}>{part}</Typography>}\r\n                                            sx={{ flex: 1 }}\r\n                                        />\r\n\r\n                                        {isSelected && (\r\n                                            <Box display=\"flex\" gap={2} flexWrap=\"wrap\" sx={{ flex: 2 }}>\r\n                                                <TextField\r\n                                                    type=\"date\"\r\n                                                    label=\"Dispatch Date\"\r\n                                                    size=\"small\"\r\n                                                    value={partIssues[part]?.dispatch_date || \"\"}\r\n                                                    onChange={(e) =>\r\n                                                        updatePartIssueFieldWithLog(selectedRBT, part, \"dispatch_date\", e.target.value)\r\n                                                    }\r\n                                                    sx={{ minWidth: 160 }}\r\n                                                    InputLabelProps={{ shrink: true }}\r\n                                                />\r\n                                                <TextField\r\n                                                    type=\"date\"\r\n                                                    label=\"Delivery Date\"\r\n                                                    size=\"small\"\r\n                                                    value={partIssues[part]?.delivery_date || \"\"}\r\n                                                    onChange={(e) =>\r\n                                                        updatePartIssueFieldWithLog(selectedRBT, part, \"delivery_date\", e.target.value)\r\n                                                    }\r\n                                                    sx={{ minWidth: 160 }}\r\n                                                    InputLabelProps={{ shrink: true }}\r\n                                                />\r\n                                            </Box>\r\n                                        )}\r\n                                    </Box>\r\n                                );\r\n                            })}\r\n                    </Box>\r\n                </DialogContent>\r\n\r\n                <DialogActions sx={{ p: 2 }}>\r\n                    {/* If a status change is pending, don't allow cancel/close */}\r\n                    {!pendingUpdates && (\r\n                        <Button onClick={() => { setSelectedRBT(null); setPendingUpdates(null); }} variant=\"text\">\r\n                            Close\r\n                        </Button>\r\n                    )}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={async () => {\r\n                            if (pendingUpdates) {\r\n                                if (!targetDate) return; // guard, button is disabled anyway\r\n                                // 1) Save target date\r\n                                await updateFieldWithLog(selectedRBT, \"target_date\", targetDate);\r\n                                // 2) Apply status updates together\r\n                                await updateManyWithLog(selectedRBT, pendingUpdates);\r\n                            } else {\r\n                                // Manual open: Only save date if changed\r\n                                if (targetDate !== (selectedRBT?.target_date || \"\")) {\r\n                                    await updateFieldWithLog(selectedRBT, \"target_date\", targetDate);\r\n                                }\r\n                            }\r\n                            setSelectedRBT(null);\r\n                            setPendingUpdates(null);\r\n                        }}\r\n                        disabled={Boolean(pendingUpdates) && !targetDate}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default RBTDataGrid;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}