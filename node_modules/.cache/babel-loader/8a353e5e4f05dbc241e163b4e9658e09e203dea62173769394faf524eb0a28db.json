{"ast":null,"code":"import _objectSpread from\"C:/Users/mis/rbt-dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// src/auth/AuthProvider.jsx\nimport React,{createContext,useContext,useEffect,useMemo,useState}from\"react\";import{onAuthStateChanged,signOut,getIdTokenResult}from\"firebase/auth\";import{doc,getDoc,setDoc,serverTimestamp}from\"firebase/firestore\";import{auth,db}from\"../firebase\";import{Navigate}from\"react-router-dom\";/**\r\n * CONFIG (tweak as needed)\r\n * - In emulator/local mode, these checks are relaxed automatically.\r\n */import{jsx as _jsx}from\"react/jsx-runtime\";const ALLOWED_DOMAINS=[];// e.g., [\"brightbots.com\"]\nconst ENFORCE_VERIFIED_EMAIL=false;// set true to require verified emails in PROD\n// Helper: detect if we’re using emulators (set by firebase.js)\nconst usingEmulators=(()=>{try{var _window,_window$__FIREBASE__;return Boolean((_window=window)===null||_window===void 0?void 0:(_window$__FIREBASE__=_window.__FIREBASE__)===null||_window$__FIREBASE__===void 0?void 0:_window$__FIREBASE__.useEmulators);}catch(_unused){return false;}})();const AuthContext=/*#__PURE__*/createContext(null);export const useAuth=()=>useContext(AuthContext);/**\r\n * Role precedence (string)\r\n * - Keep simple: \"viewer\" < \"admin\" < \"super_admin\"\r\n */const normalizeRole=val=>[\"viewer\",\"admin\",\"super_admin\"].includes(val)?val:\"viewer\";/**\r\n * Create or patch users/{uid} profile on first login.\r\n * - Also auto-promote dev@brightbots.in to super_admin (and enforce thereafter).\r\n */async function ensureUserProfile(user){if(!(user!==null&&user!==void 0&&user.uid))return null;const ref=doc(db,\"users\",user.uid);const snap=await getDoc(ref);const isDev=user.email===\"dev@brightbots.in\";if(!snap.exists()){const payload={email:user.email||null,name:user.displayName||null,role:isDev?\"super_admin\":\"viewer\",// default or super_admin for dev\nphotoURL:user.photoURL||null,createdAt:serverTimestamp(),lastLoginAt:serverTimestamp()};await setDoc(ref,payload,{merge:true});return payload;}else{const existing=snap.data()||{};const patch={lastLoginAt:serverTimestamp()};// Enforce super_admin for dev account even if doc was edited\nif(isDev&&existing.role!==\"super_admin\"){patch.role=\"super_admin\";}if(Object.keys(patch).length){await setDoc(ref,patch,{merge:true});}return _objectSpread(_objectSpread({},existing),patch);}}/**\r\n * Fetch role from Firestore users/{uid}.\r\n * Fallback to \"viewer\" if not present or offline.\r\n */async function fetchUserRole(uid){try{var _snap$data;const snap=await getDoc(doc(db,\"users\",uid));if(snap.exists())return normalizeRole((_snap$data=snap.data())===null||_snap$data===void 0?void 0:_snap$data.role);}catch(_){}return\"viewer\";}export default function AuthProvider(_ref){let{children}=_ref;const[user,setUser]=useState(null);const[claims,setClaims]=useState(null);const[role,setRole]=useState(null);const[loading,setLoading]=useState(true);const[authError,setAuthError]=useState(\"\");useEffect(()=>{const unsub=onAuthStateChanged(auth,async fbUser=>{setLoading(true);setAuthError(\"\");setClaims(null);setRole(null);setUser(fbUser||null);if(!fbUser){setLoading(false);return;}try{// Optional: pull custom claims (works even in emulator)\nconst tokenRes=await getIdTokenResult(fbUser);setClaims((tokenRes===null||tokenRes===void 0?void 0:tokenRes.claims)||null);// Create/patch profile on first login (and enforce dev super_admin), then read role\nawait ensureUserProfile(fbUser);const fetchedRole=await fetchUserRole(fbUser.uid);setRole(fetchedRole);// PROD-only checks (auto-relaxed in emulator)\nif(!usingEmulators){// Allowed domain gate\nif(ALLOWED_DOMAINS.length>0&&fbUser.email){const ok=ALLOWED_DOMAINS.some(d=>fbUser.email.toLowerCase().endsWith(\"@\".concat(d.toLowerCase())));if(!ok){setAuthError(\"unauthorized-domain\");await signOut(auth);setLoading(false);return;}}// Verified email gate\nif(ENFORCE_VERIFIED_EMAIL&&!fbUser.emailVerified){setAuthError(\"email-not-verified\");await signOut(auth);setLoading(false);return;}}setLoading(false);}catch(e){console.error(\"[AuthProvider] error:\",e);setAuthError((e===null||e===void 0?void 0:e.code)||\"auth-internal-error\");// Don’t sign out automatically; surface error and keep state\nsetLoading(false);}});return()=>unsub();},[]);const value=useMemo(()=>{const isViewer=role===\"viewer\";const isAdmin=role===\"admin\"||role===\"super_admin\";const isSuperAdmin=role===\"super_admin\";// Simple can() helper for UI gating\nconst can=action=>{switch(action){case\"read:any\":return Boolean(user);case\"write:standard\":return isAdmin||isSuperAdmin;case\"write:dangerous\":return isSuperAdmin;default:return false;}};return{user,role,claims,loading,error:authError,usingEmulators,isViewer,isAdmin,isSuperAdmin,can};},[user,role,claims,loading,authError]);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});}/**\r\n * ProtectedRoute\r\n * - Usage:\r\n *   <Route\r\n *     path=\"/admin\"\r\n *     element={\r\n *       <ProtectedRoute roles={[\"admin\",\"super_admin\"]}>\r\n *         <AdminPage/>\r\n *       </ProtectedRoute>\r\n *     }\r\n *   />\r\n */export function ProtectedRoute(_ref2){let{roles,children,fallback=\"/login\"}=_ref2;const{user,role,loading}=useAuth();if(loading)return null;// or a spinner\nif(!user)return/*#__PURE__*/_jsx(Navigate,{to:fallback,replace:true});if(roles&&roles.length>0){const ok=roles.includes(role);if(!ok)return/*#__PURE__*/_jsx(Navigate,{to:\"/403\",replace:true});}return children;}/**\r\n * RoleGate\r\n * - Inline gate for components:\r\n *   <RoleGate allow={[\"super_admin\"]}>\r\n *     <DangerZone/>\r\n *   </RoleGate>\r\n */export function RoleGate(_ref3){let{allow=[],children,fallback=null}=_ref3;const{role}=useAuth();if(allow.length===0)return children;return allow.includes(role)?children:fallback;}","map":{"version":3,"names":["React","createContext","useContext","useEffect","useMemo","useState","onAuthStateChanged","signOut","getIdTokenResult","doc","getDoc","setDoc","serverTimestamp","auth","db","Navigate","jsx","_jsx","ALLOWED_DOMAINS","ENFORCE_VERIFIED_EMAIL","usingEmulators","_window","_window$__FIREBASE__","Boolean","window","__FIREBASE__","useEmulators","_unused","AuthContext","useAuth","normalizeRole","val","includes","ensureUserProfile","user","uid","ref","snap","isDev","email","exists","payload","name","displayName","role","photoURL","createdAt","lastLoginAt","merge","existing","data","patch","Object","keys","length","_objectSpread","fetchUserRole","_snap$data","_","AuthProvider","_ref","children","setUser","claims","setClaims","setRole","loading","setLoading","authError","setAuthError","unsub","fbUser","tokenRes","fetchedRole","ok","some","d","toLowerCase","endsWith","concat","emailVerified","e","console","error","code","value","isViewer","isAdmin","isSuperAdmin","can","action","Provider","ProtectedRoute","_ref2","roles","fallback","to","replace","RoleGate","_ref3","allow"],"sources":["C:/Users/mis/rbt-dashboard/src/auth/AuthProvider.jsx"],"sourcesContent":["// src/auth/AuthProvider.jsx\r\nimport React, { createContext, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { onAuthStateChanged, signOut, getIdTokenResult } from \"firebase/auth\";\r\nimport {\r\n    doc,\r\n    getDoc,\r\n    setDoc,\r\n    serverTimestamp,\r\n} from \"firebase/firestore\";\r\nimport { auth, db } from \"../firebase\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\n/**\r\n * CONFIG (tweak as needed)\r\n * - In emulator/local mode, these checks are relaxed automatically.\r\n */\r\nconst ALLOWED_DOMAINS = []; // e.g., [\"brightbots.com\"]\r\nconst ENFORCE_VERIFIED_EMAIL = false; // set true to require verified emails in PROD\r\n\r\n// Helper: detect if we’re using emulators (set by firebase.js)\r\nconst usingEmulators = (() => {\r\n    try {\r\n        return Boolean(window?.__FIREBASE__?.useEmulators);\r\n    } catch {\r\n        return false;\r\n    }\r\n})();\r\n\r\nconst AuthContext = createContext(null);\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n/**\r\n * Role precedence (string)\r\n * - Keep simple: \"viewer\" < \"admin\" < \"super_admin\"\r\n */\r\nconst normalizeRole = (val) => ([\"viewer\", \"admin\", \"super_admin\"].includes(val) ? val : \"viewer\");\r\n\r\n/**\r\n * Create or patch users/{uid} profile on first login.\r\n * - Also auto-promote dev@brightbots.in to super_admin (and enforce thereafter).\r\n */\r\nasync function ensureUserProfile(user) {\r\n    if (!user?.uid) return null;\r\n\r\n    const ref = doc(db, \"users\", user.uid);\r\n    const snap = await getDoc(ref);\r\n    const isDev = user.email === \"dev@brightbots.in\";\r\n\r\n    if (!snap.exists()) {\r\n        const payload = {\r\n            email: user.email || null,\r\n            name: user.displayName || null,\r\n            role: isDev ? \"super_admin\" : \"viewer\", // default or super_admin for dev\r\n            photoURL: user.photoURL || null,\r\n            createdAt: serverTimestamp(),\r\n            lastLoginAt: serverTimestamp(),\r\n        };\r\n        await setDoc(ref, payload, { merge: true });\r\n        return payload;\r\n    } else {\r\n        const existing = snap.data() || {};\r\n        const patch = { lastLoginAt: serverTimestamp() };\r\n        // Enforce super_admin for dev account even if doc was edited\r\n        if (isDev && existing.role !== \"super_admin\") {\r\n            patch.role = \"super_admin\";\r\n        }\r\n        if (Object.keys(patch).length) {\r\n            await setDoc(ref, patch, { merge: true });\r\n        }\r\n        return { ...existing, ...patch };\r\n    }\r\n}\r\n\r\n/**\r\n * Fetch role from Firestore users/{uid}.\r\n * Fallback to \"viewer\" if not present or offline.\r\n */\r\nasync function fetchUserRole(uid) {\r\n    try {\r\n        const snap = await getDoc(doc(db, \"users\", uid));\r\n        if (snap.exists()) return normalizeRole(snap.data()?.role);\r\n    } catch (_) { }\r\n    return \"viewer\";\r\n}\r\n\r\nexport default function AuthProvider({ children }) {\r\n    const [user, setUser] = useState(null);\r\n    const [claims, setClaims] = useState(null);\r\n    const [role, setRole] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [authError, setAuthError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const unsub = onAuthStateChanged(auth, async (fbUser) => {\r\n            setLoading(true);\r\n            setAuthError(\"\");\r\n            setClaims(null);\r\n            setRole(null);\r\n            setUser(fbUser || null);\r\n\r\n            if (!fbUser) {\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            try {\r\n                // Optional: pull custom claims (works even in emulator)\r\n                const tokenRes = await getIdTokenResult(fbUser);\r\n                setClaims(tokenRes?.claims || null);\r\n\r\n                // Create/patch profile on first login (and enforce dev super_admin), then read role\r\n                await ensureUserProfile(fbUser);\r\n                const fetchedRole = await fetchUserRole(fbUser.uid);\r\n                setRole(fetchedRole);\r\n\r\n                // PROD-only checks (auto-relaxed in emulator)\r\n                if (!usingEmulators) {\r\n                    // Allowed domain gate\r\n                    if (ALLOWED_DOMAINS.length > 0 && fbUser.email) {\r\n                        const ok = ALLOWED_DOMAINS.some((d) =>\r\n                            fbUser.email.toLowerCase().endsWith(`@${d.toLowerCase()}`)\r\n                        );\r\n                        if (!ok) {\r\n                            setAuthError(\"unauthorized-domain\");\r\n                            await signOut(auth);\r\n                            setLoading(false);\r\n                            return;\r\n                        }\r\n                    }\r\n                    // Verified email gate\r\n                    if (ENFORCE_VERIFIED_EMAIL && !fbUser.emailVerified) {\r\n                        setAuthError(\"email-not-verified\");\r\n                        await signOut(auth);\r\n                        setLoading(false);\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                setLoading(false);\r\n            } catch (e) {\r\n                console.error(\"[AuthProvider] error:\", e);\r\n                setAuthError(e?.code || \"auth-internal-error\");\r\n                // Don’t sign out automatically; surface error and keep state\r\n                setLoading(false);\r\n            }\r\n        });\r\n\r\n        return () => unsub();\r\n    }, []);\r\n\r\n    const value = useMemo(() => {\r\n        const isViewer = role === \"viewer\";\r\n        const isAdmin = role === \"admin\" || role === \"super_admin\";\r\n        const isSuperAdmin = role === \"super_admin\";\r\n\r\n        // Simple can() helper for UI gating\r\n        const can = (action) => {\r\n            switch (action) {\r\n                case \"read:any\":\r\n                    return Boolean(user);\r\n                case \"write:standard\":\r\n                    return isAdmin || isSuperAdmin;\r\n                case \"write:dangerous\":\r\n                    return isSuperAdmin;\r\n                default:\r\n                    return false;\r\n            }\r\n        };\r\n\r\n        return {\r\n            user,\r\n            role,\r\n            claims,\r\n            loading,\r\n            error: authError,\r\n            usingEmulators,\r\n            isViewer,\r\n            isAdmin,\r\n            isSuperAdmin,\r\n            can,\r\n        };\r\n    }, [user, role, claims, loading, authError]);\r\n\r\n    return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\n\r\n/**\r\n * ProtectedRoute\r\n * - Usage:\r\n *   <Route\r\n *     path=\"/admin\"\r\n *     element={\r\n *       <ProtectedRoute roles={[\"admin\",\"super_admin\"]}>\r\n *         <AdminPage/>\r\n *       </ProtectedRoute>\r\n *     }\r\n *   />\r\n */\r\nexport function ProtectedRoute({ roles, children, fallback = \"/login\" }) {\r\n    const { user, role, loading } = useAuth();\r\n\r\n    if (loading) return null; // or a spinner\r\n    if (!user) return <Navigate to={fallback} replace />;\r\n\r\n    if (roles && roles.length > 0) {\r\n        const ok = roles.includes(role);\r\n        if (!ok) return <Navigate to=\"/403\" replace />;\r\n    }\r\n\r\n    return children;\r\n}\r\n\r\n/**\r\n * RoleGate\r\n * - Inline gate for components:\r\n *   <RoleGate allow={[\"super_admin\"]}>\r\n *     <DangerZone/>\r\n *   </RoleGate>\r\n */\r\nexport function RoleGate({ allow = [], children, fallback = null }) {\r\n    const { role } = useAuth();\r\n    if (allow.length === 0) return children;\r\n    return allow.includes(role) ? children : fallback;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}