{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef(null);\n  const id = React.useRef(\"mui-\".concat(Math.round(Math.random() * 1e9)));\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","map":{"version":3,"names":["React","useFirstRender","useGridRegisterPipeApplier","apiRef","group","callback","cleanup","useRef","id","concat","Math","round","random","registerPreProcessor","useCallback","current","registerPipeApplier","isFirstRender","useEffect"],"sources":["C:/Users/mis/rbt-dashboard/node_modules/@mui/x-data-grid/esm/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef(null);\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,cAAc,QAAQ,+BAA+B;AAC9D,OAAO,MAAMC,0BAA0B,GAAGA,CAACC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,KAAK;EACrE,MAAMC,OAAO,GAAGN,KAAK,CAACO,MAAM,CAAC,IAAI,CAAC;EAClC,MAAMC,EAAE,GAAGR,KAAK,CAACO,MAAM,QAAAE,MAAA,CAAQC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAE,CAAC;EACjE,MAAMC,oBAAoB,GAAGb,KAAK,CAACc,WAAW,CAAC,MAAM;IACnDR,OAAO,CAACS,OAAO,GAAGZ,MAAM,CAACY,OAAO,CAACC,mBAAmB,CAACZ,KAAK,EAAEI,EAAE,CAACO,OAAO,EAAEV,QAAQ,CAAC;EACnF,CAAC,EAAE,CAACF,MAAM,EAAEE,QAAQ,EAAED,KAAK,CAAC,CAAC;EAC7BH,cAAc,CAAC,MAAM;IACnBY,oBAAoB,CAAC,CAAC;EACxB,CAAC,CAAC;EACF,MAAMI,aAAa,GAAGjB,KAAK,CAACO,MAAM,CAAC,IAAI,CAAC;EACxCP,KAAK,CAACkB,SAAS,CAAC,MAAM;IACpB,IAAID,aAAa,CAACF,OAAO,EAAE;MACzBE,aAAa,CAACF,OAAO,GAAG,KAAK;IAC/B,CAAC,MAAM;MACLF,oBAAoB,CAAC,CAAC;IACxB;IACA,OAAO,MAAM;MACX,IAAIP,OAAO,CAACS,OAAO,EAAE;QACnBT,OAAO,CAACS,OAAO,CAAC,CAAC;QACjBT,OAAO,CAACS,OAAO,GAAG,IAAI;MACxB;IACF,CAAC;EACH,CAAC,EAAE,CAACF,oBAAoB,CAAC,CAAC;AAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}