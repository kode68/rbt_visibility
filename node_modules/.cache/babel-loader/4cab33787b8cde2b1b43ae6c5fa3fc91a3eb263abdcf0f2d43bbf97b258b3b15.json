{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridPanelContext } from \"./GridPanelContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridPreferencesPanel() {\n  var _preferencePanelState, _rootProps$slotProps;\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const {\n    columnsPanelTriggerRef,\n    filterPanelTriggerRef,\n    aiAssistantPanelTriggerRef\n  } = useGridPanelContext();\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, (_preferencePanelState = preferencePanelState.openedPanelValue) !== null && _preferencePanelState !== void 0 ? _preferencePanelState : GridPreferencePanelsValue.filters);\n  let target = null;\n  switch (preferencePanelState.openedPanelValue) {\n    case GridPreferencePanelsValue.filters:\n      target = filterPanelTriggerRef.current;\n      break;\n    case GridPreferencePanelsValue.columns:\n      target = columnsPanelTriggerRef.current;\n      break;\n    case GridPreferencePanelsValue.aiAssistant:\n      target = aiAssistantPanelTriggerRef.current;\n      break;\n    default:\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    id: preferencePanelState.panelId,\n    open: columns.length > 0 && preferencePanelState.open,\n    \"aria-labelledby\": preferencePanelState.labelId,\n    target: target,\n    onClose: () => apiRef.current.hidePreferences()\n  }, (_rootProps$slotProps = rootProps.slotProps) === null || _rootProps$slotProps === void 0 ? void 0 : _rootProps$slotProps.panel, {\n    children: panelContent\n  }));\n}","map":{"version":3,"names":["_extends","React","gridColumnDefinitionsSelector","useGridSelector","gridPreferencePanelStateSelector","GridPreferencePanelsValue","useGridApiContext","useGridRootProps","useGridPanelContext","jsx","_jsx","GridPreferencesPanel","_preferencePanelState","_rootProps$slotProps","apiRef","columns","rootProps","preferencePanelState","columnsPanelTriggerRef","filterPanelTriggerRef","aiAssistantPanelTriggerRef","panelContent","current","unstable_applyPipeProcessors","openedPanelValue","filters","target","aiAssistant","slots","panel","id","panelId","open","length","labelId","onClose","hidePreferences","slotProps","children"],"sources":["C:/Users/mis/rbt-dashboard/node_modules/@mui/x-data-grid/esm/components/panel/GridPreferencesPanel.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridPanelContext } from \"./GridPanelContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridPreferencesPanel() {\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const {\n    columnsPanelTriggerRef,\n    filterPanelTriggerRef,\n    aiAssistantPanelTriggerRef\n  } = useGridPanelContext();\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, preferencePanelState.openedPanelValue ?? GridPreferencePanelsValue.filters);\n  let target = null;\n  switch (preferencePanelState.openedPanelValue) {\n    case GridPreferencePanelsValue.filters:\n      target = filterPanelTriggerRef.current;\n      break;\n    case GridPreferencePanelsValue.columns:\n      target = columnsPanelTriggerRef.current;\n      break;\n    case GridPreferencePanelsValue.aiAssistant:\n      target = aiAssistantPanelTriggerRef.current;\n      break;\n    default:\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    id: preferencePanelState.panelId,\n    open: columns.length > 0 && preferencePanelState.open,\n    \"aria-labelledby\": preferencePanelState.labelId,\n    target: target,\n    onClose: () => apiRef.current.hidePreferences()\n  }, rootProps.slotProps?.panel, {\n    children: panelContent\n  }));\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,6BAA6B,QAAQ,qDAAqD;AACnG,SAASC,eAAe,QAAQ,sCAAsC;AACtE,SAASC,gCAAgC,QAAQ,sEAAsE;AACvH,SAASC,yBAAyB,QAAQ,oEAAoE;AAC9G,SAASC,iBAAiB,QAAQ,wCAAwC;AAC1E,SAASC,gBAAgB,QAAQ,uCAAuC;AACxE,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,OAAO,SAASC,oBAAoBA,CAAA,EAAG;EAAA,IAAAC,qBAAA,EAAAC,oBAAA;EACrC,MAAMC,MAAM,GAAGR,iBAAiB,CAAC,CAAC;EAClC,MAAMS,OAAO,GAAGZ,eAAe,CAACW,MAAM,EAAEZ,6BAA6B,CAAC;EACtE,MAAMc,SAAS,GAAGT,gBAAgB,CAAC,CAAC;EACpC,MAAMU,oBAAoB,GAAGd,eAAe,CAACW,MAAM,EAAEV,gCAAgC,CAAC;EACtF,MAAM;IACJc,sBAAsB;IACtBC,qBAAqB;IACrBC;EACF,CAAC,GAAGZ,mBAAmB,CAAC,CAAC;EACzB,MAAMa,YAAY,GAAGP,MAAM,CAACQ,OAAO,CAACC,4BAA4B,CAAC,iBAAiB,EAAE,IAAI,GAAAX,qBAAA,GAAEK,oBAAoB,CAACO,gBAAgB,cAAAZ,qBAAA,cAAAA,qBAAA,GAAIP,yBAAyB,CAACoB,OAAO,CAAC;EACrK,IAAIC,MAAM,GAAG,IAAI;EACjB,QAAQT,oBAAoB,CAACO,gBAAgB;IAC3C,KAAKnB,yBAAyB,CAACoB,OAAO;MACpCC,MAAM,GAAGP,qBAAqB,CAACG,OAAO;MACtC;IACF,KAAKjB,yBAAyB,CAACU,OAAO;MACpCW,MAAM,GAAGR,sBAAsB,CAACI,OAAO;MACvC;IACF,KAAKjB,yBAAyB,CAACsB,WAAW;MACxCD,MAAM,GAAGN,0BAA0B,CAACE,OAAO;MAC3C;IACF;EACF;EACA,OAAO,aAAaZ,IAAI,CAACM,SAAS,CAACY,KAAK,CAACC,KAAK,EAAE7B,QAAQ,CAAC;IACvD8B,EAAE,EAAEb,oBAAoB,CAACc,OAAO;IAChCC,IAAI,EAAEjB,OAAO,CAACkB,MAAM,GAAG,CAAC,IAAIhB,oBAAoB,CAACe,IAAI;IACrD,iBAAiB,EAAEf,oBAAoB,CAACiB,OAAO;IAC/CR,MAAM,EAAEA,MAAM;IACdS,OAAO,EAAEA,CAAA,KAAMrB,MAAM,CAACQ,OAAO,CAACc,eAAe,CAAC;EAChD,CAAC,GAAAvB,oBAAA,GAAEG,SAAS,CAACqB,SAAS,cAAAxB,oBAAA,uBAAnBA,oBAAA,CAAqBgB,KAAK,EAAE;IAC7BS,QAAQ,EAAEjB;EACZ,CAAC,CAAC,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}