{"ast":null,"code":"// src/utils/db.js\nimport{doc,updateDoc,serverTimestamp,collection,addDoc,setDoc,getDoc}from\"firebase/firestore\";import{auth,db}from\"../firebase\";import toast from\"react-hot-toast\";const serialize=v=>{if(v===null||v===undefined||v===\"\")return\"-\";if(typeof v===\"object\"){try{return JSON.stringify(v);}catch(_unused){return String(v);}}return String(v);};// ms → whole days (non-negative) — safer for any input\nconst diffDaysFromNow=dateObj=>{if(!dateObj)return 0;const t=typeof dateObj.getTime===\"function\"?dateObj.getTime():new Date(dateObj).getTime();const ms=Date.now()-t;if(isNaN(ms))return 0;return Math.max(Math.floor(ms/(1000*60*60*24)),0);};export const logAndUpdateField=async(client,site,rbtId,field,oldValue,newValue)=>{try{var _auth$currentUser;// Basic guards\nif(!site||!rbtId||!field){console.error(\"❌ Missing required parameters:\",{client,site,rbtId,field});toast.error(\"Update failed: Missing parameters\");return;}const userEmail=((_auth$currentUser=auth.currentUser)===null||_auth$currentUser===void 0?void 0:_auth$currentUser.email)||\"unknown\";const nowServer=serverTimestamp();// Path for the RBT document (supports both /clients/... and /sites/...)\nconst rbtRef=client?doc(db,\"clients\",client,\"sites\",site,\"rbts\",rbtId):doc(db,\"sites\",site,\"rbts\",rbtId);// Read current doc (needed for timestamp + ageing logic)\nconst snap=await getDoc(rbtRef);const data=snap.exists()?snap.data():{};// Build update payload (dot-paths like \"part_issues.X.dispatch_date\" work in updateDoc)\nconst updatePayload={[field]:newValue,last_updated:nowServer};// --- Running status special handling: timestamps + ageing ---\nif(field===\"running_status\"){var _data$running_manual_,_data$running_manual_2,_data$running_not_run,_data$running_not_run2;const prevManualAt=((_data$running_manual_=data.running_manual_at)===null||_data$running_manual_===void 0?void 0:(_data$running_manual_2=_data$running_manual_.toDate)===null||_data$running_manual_2===void 0?void 0:_data$running_manual_2.call(_data$running_manual_))||null;const prevNotRunAt=((_data$running_not_run=data.running_not_running_at)===null||_data$running_not_run===void 0?void 0:(_data$running_not_run2=_data$running_not_run.toDate)===null||_data$running_not_run2===void 0?void 0:_data$running_not_run2.call(_data$running_not_run))||null;if(newValue===\"Auto\"){// Reset when back to Auto\nupdatePayload.running_manual_at=null;updatePayload.running_not_running_at=null;updatePayload.running_status_ageing=0;}else if(newValue===\"Manual\"){if(!prevManualAt){updatePayload.running_manual_at=nowServer;}const manualBase=prevManualAt||new Date();const older=prevNotRunAt?manualBase<prevNotRunAt?manualBase:prevNotRunAt:manualBase;updatePayload.running_status_ageing=diffDaysFromNow(older);}else if(newValue===\"Not Running\"){if(!prevNotRunAt){updatePayload.running_not_running_at=nowServer;}const notRunBase=prevNotRunAt||new Date();const older=prevManualAt?notRunBase<prevManualAt?notRunBase:prevManualAt:notRunBase;updatePayload.running_status_ageing=diffDaysFromNow(older);}}// 1) Update the RBT doc\nawait updateDoc(rbtRef,updatePayload);// 2) Append/update history for the day\nconst today=new Date();const dateKey=today.toISOString().split(\"T\")[0];const historyRef=client?doc(db,\"clients\",client,\"sites\",site,\"rbts\",rbtId,\"history\",dateKey):doc(db,\"sites\",site,\"rbts\",rbtId,\"history\",dateKey);await setDoc(historyRef,{[field]:newValue,updated_by:userEmail,updated_at:nowServer},{merge:true});// 3) Add audit log row\nconst logRef=collection(db,\"rbt_logs\");await addDoc(logRef,{client:client||null,site,rbt_id:rbtId,field,old_value:serialize(oldValue),new_value:serialize(newValue),updated_by:userEmail,timestamp:nowServer// server timestamp for consistent ordering\n});toast.success(\"\".concat(field,\" updated successfully\"));}catch(err){console.error(\"❌ Failed to update and log:\",err);toast.error(\"Update failed\");}};","map":{"version":3,"names":["doc","updateDoc","serverTimestamp","collection","addDoc","setDoc","getDoc","auth","db","toast","serialize","v","undefined","JSON","stringify","_unused","String","diffDaysFromNow","dateObj","t","getTime","Date","ms","now","isNaN","Math","max","floor","logAndUpdateField","client","site","rbtId","field","oldValue","newValue","_auth$currentUser","console","error","userEmail","currentUser","email","nowServer","rbtRef","snap","data","exists","updatePayload","last_updated","_data$running_manual_","_data$running_manual_2","_data$running_not_run","_data$running_not_run2","prevManualAt","running_manual_at","toDate","call","prevNotRunAt","running_not_running_at","running_status_ageing","manualBase","older","notRunBase","today","dateKey","toISOString","split","historyRef","updated_by","updated_at","merge","logRef","rbt_id","old_value","new_value","timestamp","success","concat","err"],"sources":["C:/Users/mis/rbt-dashboard/src/utils/db.js"],"sourcesContent":["// src/utils/db.js\r\nimport {\r\n    doc,\r\n    updateDoc,\r\n    serverTimestamp,\r\n    collection,\r\n    addDoc,\r\n    setDoc,\r\n    getDoc,\r\n} from \"firebase/firestore\";\r\nimport { auth, db } from \"../firebase\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nconst serialize = (v) => {\r\n    if (v === null || v === undefined || v === \"\") return \"-\";\r\n    if (typeof v === \"object\") {\r\n        try {\r\n            return JSON.stringify(v);\r\n        } catch {\r\n            return String(v);\r\n        }\r\n    }\r\n    return String(v);\r\n};\r\n\r\n// ms → whole days (non-negative) — safer for any input\r\nconst diffDaysFromNow = (dateObj) => {\r\n    if (!dateObj) return 0;\r\n    const t =\r\n        typeof dateObj.getTime === \"function\"\r\n            ? dateObj.getTime()\r\n            : new Date(dateObj).getTime();\r\n    const ms = Date.now() - t;\r\n    if (isNaN(ms)) return 0;\r\n    return Math.max(Math.floor(ms / (1000 * 60 * 60 * 24)), 0);\r\n};\r\n\r\nexport const logAndUpdateField = async (client, site, rbtId, field, oldValue, newValue) => {\r\n    try {\r\n        // Basic guards\r\n        if (!site || !rbtId || !field) {\r\n            console.error(\"❌ Missing required parameters:\", { client, site, rbtId, field });\r\n            toast.error(\"Update failed: Missing parameters\");\r\n            return;\r\n        }\r\n\r\n        const userEmail = auth.currentUser?.email || \"unknown\";\r\n        const nowServer = serverTimestamp();\r\n\r\n        // Path for the RBT document (supports both /clients/... and /sites/...)\r\n        const rbtRef = client\r\n            ? doc(db, \"clients\", client, \"sites\", site, \"rbts\", rbtId)\r\n            : doc(db, \"sites\", site, \"rbts\", rbtId);\r\n\r\n        // Read current doc (needed for timestamp + ageing logic)\r\n        const snap = await getDoc(rbtRef);\r\n        const data = snap.exists() ? snap.data() : {};\r\n\r\n        // Build update payload (dot-paths like \"part_issues.X.dispatch_date\" work in updateDoc)\r\n        const updatePayload = { [field]: newValue, last_updated: nowServer };\r\n\r\n        // --- Running status special handling: timestamps + ageing ---\r\n        if (field === \"running_status\") {\r\n            const prevManualAt = data.running_manual_at?.toDate?.() || null;\r\n            const prevNotRunAt = data.running_not_running_at?.toDate?.() || null;\r\n\r\n            if (newValue === \"Auto\") {\r\n                // Reset when back to Auto\r\n                updatePayload.running_manual_at = null;\r\n                updatePayload.running_not_running_at = null;\r\n                updatePayload.running_status_ageing = 0;\r\n            } else if (newValue === \"Manual\") {\r\n                if (!prevManualAt) {\r\n                    updatePayload.running_manual_at = nowServer;\r\n                }\r\n                const manualBase = prevManualAt || new Date();\r\n                const older = prevNotRunAt\r\n                    ? (manualBase < prevNotRunAt ? manualBase : prevNotRunAt)\r\n                    : manualBase;\r\n                updatePayload.running_status_ageing = diffDaysFromNow(older);\r\n            } else if (newValue === \"Not Running\") {\r\n                if (!prevNotRunAt) {\r\n                    updatePayload.running_not_running_at = nowServer;\r\n                }\r\n                const notRunBase = prevNotRunAt || new Date();\r\n                const older = prevManualAt\r\n                    ? (notRunBase < prevManualAt ? notRunBase : prevManualAt)\r\n                    : notRunBase;\r\n                updatePayload.running_status_ageing = diffDaysFromNow(older);\r\n            }\r\n        }\r\n\r\n        // 1) Update the RBT doc\r\n        await updateDoc(rbtRef, updatePayload);\r\n\r\n        // 2) Append/update history for the day\r\n        const today = new Date();\r\n        const dateKey = today.toISOString().split(\"T\")[0];\r\n        const historyRef = client\r\n            ? doc(db, \"clients\", client, \"sites\", site, \"rbts\", rbtId, \"history\", dateKey)\r\n            : doc(db, \"sites\", site, \"rbts\", rbtId, \"history\", dateKey);\r\n\r\n        await setDoc(\r\n            historyRef,\r\n            {\r\n                [field]: newValue,\r\n                updated_by: userEmail,\r\n                updated_at: nowServer,\r\n            },\r\n            { merge: true }\r\n        );\r\n\r\n        // 3) Add audit log row\r\n        const logRef = collection(db, \"rbt_logs\");\r\n        await addDoc(logRef, {\r\n            client: client || null,\r\n            site,\r\n            rbt_id: rbtId,\r\n            field,\r\n            old_value: serialize(oldValue),\r\n            new_value: serialize(newValue),\r\n            updated_by: userEmail,\r\n            timestamp: nowServer, // server timestamp for consistent ordering\r\n        });\r\n\r\n        toast.success(`${field} updated successfully`);\r\n    } catch (err) {\r\n        console.error(\"❌ Failed to update and log:\", err);\r\n        toast.error(\"Update failed\");\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}