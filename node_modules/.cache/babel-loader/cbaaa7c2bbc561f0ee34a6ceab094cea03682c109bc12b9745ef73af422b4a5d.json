{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeProcessor = function (apiRef, group, callback) {\n  let enabled = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  const cleanup = React.useRef(null);\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    if (enabled) {\n      registerPreProcessor();\n    }\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else if (enabled) {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor, enabled]);\n};","map":{"version":3,"names":["React","useFirstRender","useGridRegisterPipeProcessor","apiRef","group","callback","enabled","arguments","length","undefined","cleanup","useRef","id","Math","round","random","registerPreProcessor","useCallback","current","registerPipeProcessor","isFirstRender","useEffect"],"sources":["C:/Users/mis/rbt-dashboard/node_modules/@mui/x-data-grid/esm/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback, enabled = true) => {\n  const cleanup = React.useRef(null);\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    if (enabled) {\n      registerPreProcessor();\n    }\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else if (enabled) {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor, enabled]);\n};"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,cAAc,QAAQ,+BAA+B;AAC9D,OAAO,MAAMC,4BAA4B,GAAG,SAAAA,CAACC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAqB;EAAA,IAAnBC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAClF,MAAMG,OAAO,GAAGV,KAAK,CAACW,MAAM,CAAC,IAAI,CAAC;EAClC,MAAMC,EAAE,GAAGZ,KAAK,CAACW,MAAM,CAAC,OAAOE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC;EACjE,MAAMC,oBAAoB,GAAGhB,KAAK,CAACiB,WAAW,CAAC,MAAM;IACnDP,OAAO,CAACQ,OAAO,GAAGf,MAAM,CAACe,OAAO,CAACC,qBAAqB,CAACf,KAAK,EAAEQ,EAAE,CAACM,OAAO,EAAEb,QAAQ,CAAC;EACrF,CAAC,EAAE,CAACF,MAAM,EAAEE,QAAQ,EAAED,KAAK,CAAC,CAAC;EAC7BH,cAAc,CAAC,MAAM;IACnB,IAAIK,OAAO,EAAE;MACXU,oBAAoB,CAAC,CAAC;IACxB;EACF,CAAC,CAAC;EACF,MAAMI,aAAa,GAAGpB,KAAK,CAACW,MAAM,CAAC,IAAI,CAAC;EACxCX,KAAK,CAACqB,SAAS,CAAC,MAAM;IACpB,IAAID,aAAa,CAACF,OAAO,EAAE;MACzBE,aAAa,CAACF,OAAO,GAAG,KAAK;IAC/B,CAAC,MAAM,IAAIZ,OAAO,EAAE;MAClBU,oBAAoB,CAAC,CAAC;IACxB;IACA,OAAO,MAAM;MACX,IAAIN,OAAO,CAACQ,OAAO,EAAE;QACnBR,OAAO,CAACQ,OAAO,CAAC,CAAC;QACjBR,OAAO,CAACQ,OAAO,GAAG,IAAI;MACxB;IACF,CAAC;EACH,CAAC,EAAE,CAACF,oBAAoB,EAAEV,OAAO,CAAC,CAAC;AACrC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}