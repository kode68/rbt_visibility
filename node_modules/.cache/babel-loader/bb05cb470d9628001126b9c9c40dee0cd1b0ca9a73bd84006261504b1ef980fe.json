{"ast":null,"code":"import * as React from 'react';\nexport function useRunOncePerLoop(callback) {\n  let nextFrame = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const scheduledRef = React.useRef(false);\n  const schedule = React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (scheduledRef.current) {\n      return;\n    }\n    scheduledRef.current = true;\n    const runner = () => {\n      scheduledRef.current = false;\n      callback(...args);\n    };\n    if (nextFrame) {\n      if (typeof requestAnimationFrame === 'function') {\n        requestAnimationFrame(runner);\n      }\n      return;\n    }\n    if (typeof queueMicrotask === 'function') {\n      queueMicrotask(runner);\n    } else {\n      Promise.resolve().then(runner);\n    }\n  }, [callback, nextFrame]);\n  return schedule;\n}","map":{"version":3,"names":["React","useRunOncePerLoop","callback","nextFrame","arguments","length","undefined","scheduledRef","useRef","schedule","useCallback","_len","args","Array","_key","current","runner","requestAnimationFrame","queueMicrotask","Promise","resolve","then"],"sources":["C:/Users/mis/rbt-dashboard/node_modules/@mui/x-data-grid/esm/hooks/utils/useRunOncePerLoop.js"],"sourcesContent":["import * as React from 'react';\nexport function useRunOncePerLoop(callback, nextFrame = false) {\n  const scheduledRef = React.useRef(false);\n  const schedule = React.useCallback((...args) => {\n    if (scheduledRef.current) {\n      return;\n    }\n    scheduledRef.current = true;\n    const runner = () => {\n      scheduledRef.current = false;\n      callback(...args);\n    };\n    if (nextFrame) {\n      if (typeof requestAnimationFrame === 'function') {\n        requestAnimationFrame(runner);\n      }\n      return;\n    }\n    if (typeof queueMicrotask === 'function') {\n      queueMicrotask(runner);\n    } else {\n      Promise.resolve().then(runner);\n    }\n  }, [callback, nextFrame]);\n  return schedule;\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAO,SAASC,iBAAiBA,CAACC,QAAQ,EAAqB;EAAA,IAAnBC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAC3D,MAAMG,YAAY,GAAGP,KAAK,CAACQ,MAAM,CAAC,KAAK,CAAC;EACxC,MAAMC,QAAQ,GAAGT,KAAK,CAACU,WAAW,CAAC,YAAa;IAAA,SAAAC,IAAA,GAAAP,SAAA,CAAAC,MAAA,EAATO,IAAI,OAAAC,KAAA,CAAAF,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;MAAJF,IAAI,CAAAE,IAAA,IAAAV,SAAA,CAAAU,IAAA;IAAA;IACzC,IAAIP,YAAY,CAACQ,OAAO,EAAE;MACxB;IACF;IACAR,YAAY,CAACQ,OAAO,GAAG,IAAI;IAC3B,MAAMC,MAAM,GAAGA,CAAA,KAAM;MACnBT,YAAY,CAACQ,OAAO,GAAG,KAAK;MAC5Bb,QAAQ,CAAC,GAAGU,IAAI,CAAC;IACnB,CAAC;IACD,IAAIT,SAAS,EAAE;MACb,IAAI,OAAOc,qBAAqB,KAAK,UAAU,EAAE;QAC/CA,qBAAqB,CAACD,MAAM,CAAC;MAC/B;MACA;IACF;IACA,IAAI,OAAOE,cAAc,KAAK,UAAU,EAAE;MACxCA,cAAc,CAACF,MAAM,CAAC;IACxB,CAAC,MAAM;MACLG,OAAO,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAACL,MAAM,CAAC;IAChC;EACF,CAAC,EAAE,CAACd,QAAQ,EAAEC,SAAS,CAAC,CAAC;EACzB,OAAOM,QAAQ;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}